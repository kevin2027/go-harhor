openapi: 3.0.1
info:
  title: harbor
  version: 1.0.0
servers:
- url: /
tags:
- name: health
- name: search
- name: statistic
- name: Ldap
- name: configure
- name: project
- name: member
- name: projectMetadata
- name: repository
- name: artifact
- name: scan
- name: auditlog
- name: preheat
- name: robotv1
- name: immutable
- name: webhook
- name: webhookjob
- name: usergroup
- name: icon
- name: robot
- name: quota
- name: replication
- name: registry
- name: scanAll
- name: systeminfo
- name: oidc
- name: gc
- name: purge
- name: SystemCVEAllowlist
- name: ping
- name: Retention
- name: scanner
- name: user
- name: label
- name: scan data export
paths:
  /health:
    get:
      deprecated: false
      description: Check the status of Harbor components
      operationId: getHealth
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverallHealthStatus'
          description: The health status of Harbor components
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Check the status of Harbor components
      tags:
      - health
      x-apifox-folder: health
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859619-run
  /search:
    get:
      deprecated: false
      description: The Search endpoint returns information about the projects, repositories
        and helm charts offered at public status or related to the current logged
        in user. The response includes the project, repository list and charts in
        a proper display order.
      operationId: search
      parameters:
      - description: Search parameter for project and repository name.
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
          description: An array of search results
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Search for projects, repositories and helm charts
      tags:
      - search
      x-apifox-folder: search
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859620-run
  /ldap/users/search:
    get:
      deprecated: false
      description: |
        This endpoint searches the available ldap users based on related configuration parameters. Support searched by input ladp configuration, load configuration from the system and specific filter.
      operationId: searchLdapUser
      parameters:
      - description: Registered user ID
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LdapUser'
                type: array
          description: Search ldap users successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Search available ldap users.
      tags:
      - Ldap
      x-apifox-folder: Ldap
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859621-run
  /statistics:
    get:
      deprecated: false
      description: Get the statistic information about the projects and repositories
      operationId: getStatistic
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistic'
          description: The statistic information
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the statistic information about the projects and repositories
      tags:
      - statistic
      x-apifox-folder: statistic
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859622-run
  /ldap/ping:
    post:
      deprecated: false
      description: |
        This endpoint ping the available ldap service for test related configuration parameters.
      operationId: pingLdap
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapConf'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapPingResult'
          description: Ping ldap service successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Ping available ldap service.
      tags:
      - Ldap
      x-apifox-folder: Ldap
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859623-run
  /ldap/users/import:
    post:
      deprecated: false
      description: |
        This endpoint adds the selected available ldap users to harbor based on related configuration parameters from the system. System will try to guess the user email address and realname, add to harbor user information. If have errors when import user, will return the list of importing failed uid and the failed reason.
      operationId: importLdapUser
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapImportUsers'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Add ldap users successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LdapFailedImportUser'
                type: array
          description: Failed import some users.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Import selected available ldap users.
      tags:
      - Ldap
      x-apifox-folder: Ldap
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859624-run
  /ldap/groups/search:
    get:
      deprecated: false
      description: |
        This endpoint searches the available ldap groups based on related configuration parameters. support to search by groupname or groupdn.
      operationId: searchLdapGroup
      parameters:
      - description: Ldap group name
        explode: true
        in: query
        name: groupname
        required: false
        schema:
          type: string
        style: form
      - description: The LDAP group DN
        explode: true
        in: query
        name: groupdn
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroup'
                type: array
          description: Search ldap group successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Search available ldap groups.
      tags:
      - Ldap
      x-apifox-folder: Ldap
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859625-run
  /internalconfig:
    get:
      deprecated: false
      description: |
        This endpoint is for retrieving system configurations that only provides for internal api call.
      operationId: getInternalconfig
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalConfigurationsResponse'
          description: Get system configurations successfully. The response body is
            a map.
        "401":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User need to log in first.
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User does not have permission of admin role.
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Unexpected internal errors.
      summary: Get internal configurations.
      tags:
      - configure
      x-apifox-folder: configure
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859626-run
  /configurations:
    get:
      deprecated: false
      description: |
        This endpoint is for retrieving system configurations that only provides for admin user.
      operationId: getConfigurations
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
          description: Get system configurations successfully. The response body is
            a map.
        "401":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User need to log in first.ß
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User does not have permission of admin role.
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Unexpected internal errors.
      summary: Get system configurations.
      tags:
      - configure
      x-apifox-folder: configure
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859627-run
    put:
      deprecated: false
      description: |
        This endpoint is for modifying system configurations that only provides for admin user.
      operationId: updateConfigurations
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configurations'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Modify system configurations successfully.
        "401":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User need to log in first.
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User does not have permission of admin role.
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Unexpected internal errors.
      summary: Modify system configurations.
      tags:
      - configure
      x-apifox-folder: configure
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859628-run
  /projects:
    get:
      deprecated: false
      description: This endpoint returns projects created by Harbor.
      operationId: listProjects
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The name of project.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The project is public or private.
        explode: true
        in: query
        name: public
        required: false
        schema:
          type: string
        style: form
      - description: The name of project owner.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Bool value indicating whether return detailed information of
          the project
        explode: true
        in: query
        name: with_detail
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Return all matched projects.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List projects
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859629-run
    head:
      deprecated: false
      description: This endpoint is used to check if the project name provided already
        exist.
      operationId: headProject
      parameters:
      - description: Project name for checking exists.
        explode: true
        in: query
        name: project_name
        required: true
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Check if the project name user provided already exists.
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859630-run
    post:
      deprecated: false
      description: This endpoint is for user to create a new project.
      operationId: createProject
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether to return the name of the resource
          in Location. When X-Resource-Name-In-Location is true, the Location will
          return the name of the resource.
        explode: false
        in: header
        name: X-Resource-Name-In-Location
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReq'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a new project.
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859631-run
  /projects/{project_name_or_id}:
    delete:
      deprecated: false
      description: This endpoint is aimed to delete project by project ID.
      operationId: deleteProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete project by projectID
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859635-run
    get:
      deprecated: false
      description: This endpoint returns specific project information by project ID.
      operationId: getProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Return matched project information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Return specific project detail information
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859632-run
    put:
      deprecated: false
      description: This endpoint is aimed to update the properties of a project.
      operationId: updateProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update properties for a selected project.
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859633-run
  /projects/{project_name_or_id}/_deletable:
    get:
      deprecated: false
      description: Get the deletable status of the project
      operationId: getProjectDeletable
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeletable'
          description: Return deletable status of the project.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the deletable status of the project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859634-run
  /projects/{project_name_or_id}/summary:
    get:
      deprecated: false
      description: Get summary of the project.
      operationId: getProjectSummary
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSummary'
          description: Get summary of the project successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get summary of the project.
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859636-run
  /projects/{project_name_or_id}/scanner:
    get:
      deprecated: false
      description: Get the scanner registration of the specified project. If no scanner
        registration is configured for the specified project, the system default scanner
        registration will be returned.
      operationId: getScannerOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerRegistration'
          description: The details of the scanner registration.
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad project ID
        "401":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Unauthorized request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Request is not allowed
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: The requested object is not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal server error happened
      summary: Get project level scanner
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859637-run
    put:
      deprecated: false
      description: Set one of the system configured scanner registration as the indepndent
        scanner of the specified project.
      operationId: setScannerOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectScanner'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Configure scanner for the specified project
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859638-run
  /projects/{project_name_or_id}/scanner/candidates:
    get:
      deprecated: false
      description: Retrieve the system configured scanner registrations as candidates
        of setting project level scanner.
      operationId: listScannerCandidatesOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScannerRegistration'
                type: array
          description: A list of scanner registrations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get scanner registration candidates for configurating project level
        scanner
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859639-run
  /projects/{project_name}/logs:
    get:
      deprecated: false
      description: Get recent logs of the projects
      operationId: getLogs
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuditLog'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get recent logs of the projects
      tags:
      - project
      x-apifox-folder: project
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859640-run
  /projects/{project_name_or_id}/members:
    get:
      deprecated: false
      description: Get all project member information
      operationId: listProjectMembers
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The entity name to search.
        explode: true
        in: query
        name: entityname
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMemberEntity'
                type: array
          description: Get project members successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get all project member information
      tags:
      - member
      x-apifox-folder: member
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859641-run
    post:
      deprecated: false
      description: 'Create project member relationship, the member can be one of the
        user_member and group_member,  The user_member need to specify user_id or
        username. If the user already exist in harbor DB, specify the user_id,  If
        does not exist in harbor DB, it will SearchAndOnBoard the user. The group_member
        need to specify id or ldap_group_dn. If the group already exist in harbor
        DB. specify the user group''s id,  If does not exist, it will SearchAndOnBoard
        the group. '
      operationId: createProjectMember
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMember'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Project member created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create project member
      tags:
      - member
      x-apifox-folder: member
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859642-run
  /projects/{project_name_or_id}/members/{mid}:
    delete:
      deprecated: false
      operationId: deleteProjectMember
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Member ID.
        explode: false
        in: path
        name: mid
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete project member
      tags:
      - member
      x-apifox-folder: member
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859645-run
    get:
      deprecated: false
      description: Get the project member information
      operationId: getProjectMember
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The member ID
        explode: false
        in: path
        name: mid
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberEntity'
          description: Project member retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the project member information
      tags:
      - member
      x-apifox-folder: member
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859643-run
    put:
      deprecated: false
      description: Update project member relationship
      operationId: updateProjectMember
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Member ID.
        explode: false
        in: path
        name: mid
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update project member
      tags:
      - member
      x-apifox-folder: member
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859644-run
  /projects/{project_name_or_id}/metadatas/:
    get:
      deprecated: false
      description: Get the metadata of the specific project
      operationId: listProjectMetadatas
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the metadata of the specific project
      tags:
      - projectMetadata
      x-apifox-folder: projectMetadata
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859646-run
    post:
      deprecated: false
      description: Add metadata for the specific project
      operationId: addProjectMetadatas
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectMetadatasMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Add metadata for the specific project
      tags:
      - projectMetadata
      x-apifox-folder: projectMetadata
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859647-run
  /projects/{project_name_or_id}/metadatas/{meta_name}:
    delete:
      deprecated: false
      description: Delete the specific metadata for the specific project
      operationId: deleteProjectMetadata
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The name of metadata.
        explode: false
        in: path
        name: meta_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the specific metadata for the specific project
      tags:
      - projectMetadata
      x-apifox-folder: projectMetadata
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859650-run
    get:
      deprecated: false
      description: Get the specific metadata of the specific project
      operationId: getProjectMetadata
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The name of metadata.
        explode: false
        in: path
        name: meta_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific metadata of the specific project
      tags:
      - projectMetadata
      x-apifox-folder: projectMetadata
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859648-run
    put:
      deprecated: false
      description: Update the specific metadata for the specific project
      operationId: updateProjectMetadata
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The name of metadata.
        explode: false
        in: path
        name: meta_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectMetadatasMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the specific metadata for the specific project
      tags:
      - projectMetadata
      x-apifox-folder: projectMetadata
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859649-run
  /repositories:
    get:
      deprecated: false
      description: List all authorized repositories
      operationId: listAllRepositories
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List all authorized repositories
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859651-run
  /projects/{project_name}/repositories:
    get:
      deprecated: false
      description: List repositories of the specified project
      operationId: listRepositories
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Repository'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List repositories
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859652-run
  /projects/{project_name}/repositories/{repository_name}:
    delete:
      deprecated: false
      description: Delete the repository specified by name
      operationId: deleteRepository
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete repository
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859656-run
    get:
      deprecated: false
      description: Get the repository specified by name
      operationId: getRepository
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get repository
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859653-run
    put:
      deprecated: false
      description: Update the repository specified by name
      operationId: updateRepository
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update repository
      tags:
      - repository
      x-apifox-folder: repository
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859654-run
  /projects/{project_name}/repositories/{repository_name}/artifacts:
    get:
      deprecated: false
      description: List artifacts under the specific project and repository. Except
        the basic properties, the other supported queries in "q" includes "tags=*"
        to list only tagged artifacts, "tags=nil" to list only untagged artifacts,
        "tags=~v" to list artifacts whose tag fuzzy matches "v", "tags=v" to list
        artifact whose tag exactly matches "v", "labels=(id1, id2)" to list artifacts
        that both labels with id1 and id2 are added to
      operationId: listArtifacts
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Specify whether the tags are included inside the returning artifacts
        explode: true
        in: query
        name: with_tag
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the labels are included inside the returning
          artifacts
        explode: true
        in: query
        name: with_label
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the scan overview is included inside the returning
          artifacts
        explode: true
        in: query
        name: with_scan_overview
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the signature is included inside the tags of
          the returning artifacts. Only works when setting "with_tag=true"
        explode: true
        in: query
        name: with_signature
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the immutable status is included inside the tags
          of the returning artifacts. Only works when setting "with_immutable_status=true"
        explode: true
        in: query
        name: with_immutable_status
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the accessories are included of the returning
          artifacts. Only works when setting "with_accessory=true"
        explode: true
        in: query
        name: with_accessory
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          A comma-separated lists of MIME types for the scan report or scan summary. The first mime type will be used when the report found for it.
          Currently the mime type supports 'application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0' and 'application/vnd.security.vulnerability.report; version=1.1'
        explode: false
        in: header
        name: X-Accept-Vulnerabilities
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Artifact'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List artifacts
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859655-run
    post:
      deprecated: false
      description: Copy the artifact specified in the "from" parameter to the repository.
      operationId: CopyArtifact
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The artifact from which the new artifact is copied from, the
          format should be "project/repository:tag" or "project/repository@digest".
        explode: true
        in: query
        name: from
        required: true
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
          description: "405"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Copy artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859657-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}:
    delete:
      deprecated: false
      description: Delete the artifact specified by the reference under the project
        and repository. The reference can be digest or tag
      operationId: deleteArtifact
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the specific artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859659-run
    get:
      deprecated: false
      description: Get the artifact specified by the reference under the project and
        repository. The reference can be digest or tag.
      operationId: getArtifact
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Specify whether the tags are inclued inside the returning artifacts
        explode: true
        in: query
        name: with_tag
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the labels are inclued inside the returning artifacts
        explode: true
        in: query
        name: with_label
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the scan overview is inclued inside the returning
          artifacts
        explode: true
        in: query
        name: with_scan_overview
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the accessories are included of the returning
          artifacts.
        explode: true
        in: query
        name: with_accessory
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the signature is inclued inside the returning
          artifacts
        explode: true
        in: query
        name: with_signature
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the immutable status is inclued inside the tags
          of the returning artifacts.
        explode: true
        in: query
        name: with_immutable_status
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          A comma-separated lists of MIME types for the scan report or scan summary. The first mime type will be used when the report found for it.
          Currently the mime type supports 'application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0' and 'application/vnd.security.vulnerability.report; version=1.1'
        explode: false
        in: header
        name: X-Accept-Vulnerabilities
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859658-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags:
    get:
      deprecated: false
      description: List tags of the specific artifact
      operationId: listTags
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Specify whether the signature is included inside the returning
          tags
        explode: true
        in: query
        name: with_signature
        required: false
        schema:
          type: string
        style: form
      - description: Specify whether the immutable status is included inside the returning
          tags
        explode: true
        in: query
        name: with_immutable_status
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List tags
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859661-run
    post:
      deprecated: false
      description: Create a tag for the specified artifact
      operationId: createTag
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
          description: "405"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create tag
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859660-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/accessories:
    get:
      deprecated: false
      description: List accessories of the specific artifact
      operationId: listAccessories
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Accessory'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List accessories
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859662-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}:
    delete:
      deprecated: false
      description: Delete the tag of the specified artifact
      operationId: deleteTag
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the tag
        explode: false
        in: path
        name: tag_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete tag
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859663-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/vulnerabilities:
    get:
      deprecated: false
      description: Get the vulnerabilities addition of the artifact specified by the
        reference under the project and repository.
      operationId: getVulnerabilitiesAddition
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: |-
          A comma-separated lists of MIME types for the scan report or scan summary. The first mime type will be used when the report found for it.
          Currently the mime type supports 'application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0' and 'application/vnd.security.vulnerability.report; version=1.1'
        explode: false
        in: header
        name: X-Accept-Vulnerabilities
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the vulnerabilities addition of the specific artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859664-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}:
    get:
      deprecated: false
      description: Get the addition of the artifact specified by the reference under
        the project and repository.
      operationId: getAddition
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: The type of addition.
        explode: false
        in: path
        name: addition
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the addition of the specific artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859665-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels:
    post:
      deprecated: false
      description: Add label to the specified artiact.
      operationId: addLabel
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Add label to artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859666-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}:
    delete:
      deprecated: false
      description: Remove the label from the specified artiact.
      operationId: removeLabel
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the label that removed from the artifact.
        explode: false
        in: path
        name: label_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Remove label from artifact
      tags:
      - artifact
      x-apifox-folder: artifact
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859667-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan:
    post:
      deprecated: false
      description: Scan the specified artifact
      operationId: scanArtifact
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Scan the artifact
      tags:
      - scan
      x-apifox-folder: scan
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859668-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/stop:
    post:
      deprecated: false
      description: Cancelling a scan job for a particular artifact
      operationId: stopScanArtifact
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Cancelling a scan job for a particular artifact
      tags:
      - scan
      x-apifox-folder: scan
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859669-run
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log:
    get:
      deprecated: false
      description: Get the log of the scan report
      operationId: getReportLog
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the repository. If it contains slash, encode it with
          URL encoding. e.g. a/b -> a%252Fb
        explode: false
        in: path
        name: repository_name
        required: true
        schema:
          type: string
        style: simple
      - description: The reference of the artifact, can be digest or tag
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: The report id to get the log
        explode: false
        in: path
        name: report_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Successfully get scan log file
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the log of the scan report
      tags:
      - scan
      x-apifox-folder: scan
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859670-run
  /audit-logs:
    get:
      deprecated: false
      description: |
        This endpoint let user see the recent operation logs of the projects which he is member of
      operationId: listAuditLogs
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuditLog'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get recent logs of the projects which the user is a member of
      tags:
      - auditlog
      x-apifox-folder: auditlog
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859671-run
  /p2p/preheat/providers:
    get:
      deprecated: false
      description: List P2P providers
      operationId: ListProviders
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Metadata'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List P2P providers
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859672-run
  /p2p/preheat/instances/ping:
    post:
      deprecated: false
      description: |
        This endpoint checks status of a instance, the instance can be given by ID or Endpoint URL (together with credential)
      operationId: PingInstances
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Instance not found (when instance is provided by ID).
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Ping status of a instance.
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859673-run
  /p2p/preheat/instances:
    get:
      deprecated: false
      description: List P2P provider instances
      operationId: ListInstances
      parameters:
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List P2P provider instances
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859674-run
    post:
      deprecated: false
      description: Create p2p provider instances
      operationId: CreateInstance
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create p2p provider instances
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859675-run
  /p2p/preheat/instances/{preheat_instance_name}:
    delete:
      deprecated: false
      description: Delete the specified P2P provider instance
      operationId: DeleteInstance
      parameters:
      - description: Instance Name
        explode: false
        in: path
        name: preheat_instance_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the specified P2P provider instance
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859677-run
    get:
      deprecated: false
      description: Get a P2P provider instance
      operationId: GetInstance
      parameters:
      - description: Instance Name
        explode: false
        in: path
        name: preheat_instance_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a P2P provider instance
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859676-run
    put:
      deprecated: false
      description: Update the specified P2P provider instance
      operationId: UpdateInstance
      parameters:
      - description: Instance Name
        explode: false
        in: path
        name: preheat_instance_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the specified P2P provider instance
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859678-run
  /projects/{project_name}/preheat/policies:
    get:
      deprecated: false
      description: List preheat policies
      operationId: ListPolicies
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PreheatPolicy'
                type: array
          description: List preheat policies success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List preheat policies
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859680-run
    post:
      deprecated: false
      description: Create a preheat policy under a project
      operationId: CreatePolicy
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a preheat policy under a project
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859679-run
  /projects/{project_name}/preheat/policies/{preheat_policy_name}:
    delete:
      deprecated: false
      description: Delete a preheat policy
      operationId: DeletePolicy
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete a preheat policy
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859684-run
    get:
      deprecated: false
      description: Get a preheat policy
      operationId: GetPolicy
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreheatPolicy'
          description: Get a preheat policy success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a preheat policy
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859681-run
    post:
      deprecated: false
      description: Manual preheat
      operationId: ManualPreheat
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Manual preheat
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859683-run
    put:
      deprecated: false
      description: Update preheat policy
      operationId: UpdatePolicy
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreheatPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update preheat policy
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859682-run
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions:
    get:
      deprecated: false
      description: List executions for the given policy
      operationId: ListExecutions
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Execution'
                type: array
          description: List executions success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List executions for the given policy
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859685-run
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}:
    get:
      deprecated: false
      description: Get a execution detail by id
      operationId: GetExecution
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
          description: Get execution success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a execution detail by id
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859686-run
    patch:
      deprecated: false
      description: Stop a execution
      operationId: StopExecution
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop a execution
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859688-run
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks:
    get:
      deprecated: false
      description: List all the related tasks for the given execution
      operationId: ListTasks
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: List tasks success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List all the related tasks for the given execution
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859687-run
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs:
    get:
      deprecated: false
      description: Get the log text stream of the specified task for the given execution
      operationId: GetPreheatLog
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: Preheat Policy Name
        explode: false
        in: path
        name: preheat_policy_name
        required: true
        schema:
          type: string
        style: simple
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Task ID
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Get log success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the log text stream of the specified task for the given execution
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859689-run
  /projects/{project_name}/preheat/providers:
    get:
      deprecated: false
      description: Get all providers at project level
      operationId: ListProvidersUnderProject
      parameters:
      - description: The name of the project
        explode: false
        in: path
        name: project_name
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProviderUnderProject'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get all providers at project level
      tags:
      - preheat
      x-apifox-folder: preheat
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859690-run
  /projects/{project_name_or_id}/robots:
    get:
      deprecated: false
      description: Get all robot accounts of specified project
      operationId: ListRobotV1
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Robot'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get all robot accounts of specified project
      tags:
      - robotv1
      x-apifox-folder: robotv1
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859691-run
    post:
      deprecated: false
      description: Create a robot account
      operationId: CreateRobotV1
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCreateV1'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RobotCreated'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a robot account
      tags:
      - robotv1
      x-apifox-folder: robotv1
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859692-run
  /projects/{project_name_or_id}/robots/{robot_id}:
    delete:
      deprecated: false
      description: This endpoint deletes specific robot account information by robot
        ID.
      operationId: DeleteRobotV1
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete a robot account
      tags:
      - robotv1
      x-apifox-folder: robotv1
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859696-run
    get:
      deprecated: false
      description: This endpoint returns specific robot account information by robot
        ID.
      operationId: GetRobotByIDV1
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'
          description: Return matched robot information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a robot account
      tags:
      - robotv1
      x-apifox-folder: robotv1
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859693-run
    put:
      deprecated: false
      description: Used to disable/enable a specified robot account.
      operationId: UpdateRobotV1
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update status of robot account.
      tags:
      - robotv1
      x-apifox-folder: robotv1
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859695-run
  /projects/{project_name_or_id}/immutabletagrules:
    get:
      deprecated: false
      description: |
        This endpoint returns the immutable tag rules of a project
      operationId: ListImmuRules
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImmutableRule'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List all immutable tag rules of current project
      tags:
      - immutable
      x-apifox-folder: immutable
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859694-run
    post:
      deprecated: false
      description: |
        This endpoint add an immutable tag rule to the project
      operationId: CreateImmuRule
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutableRule'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Add an immutable tag rule to current project
      tags:
      - immutable
      x-apifox-folder: immutable
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859697-run
  /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id}:
    delete:
      deprecated: false
      operationId: DeleteImmuRule
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the immutable rule
        explode: false
        in: path
        name: immutable_rule_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the immutable tag rule.
      tags:
      - immutable
      x-apifox-folder: immutable
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859699-run
    put:
      deprecated: false
      operationId: UpdateImmuRule
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the immutable rule
        explode: false
        in: path
        name: immutable_rule_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutableRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the immutable tag rule or enable or disable the rule
      tags:
      - immutable
      x-apifox-folder: immutable
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859698-run
  /projects/{project_name_or_id}/webhook/policies:
    get:
      deprecated: false
      description: |
        This endpoint returns webhook policies of a project.
      operationId: ListWebhookPoliciesOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookPolicy'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List project webhook policies.
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859700-run
    post:
      deprecated: false
      description: |
        This endpoint create a webhook policy if the project does not have one.
      operationId: CreateWebhookPolicyOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPolicy'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Project webhook policy create successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create project webhook policy.
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859701-run
  /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id}:
    delete:
      deprecated: false
      description: |
        This endpoint is aimed to delete webhookpolicy of a project.
      operationId: DeleteWebhookPolicyOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the webhook policy
        explode: false
        in: path
        name: webhook_policy_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete webhook policy of a project
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859705-run
    get:
      deprecated: false
      description: |
        This endpoint returns specified webhook policy of a project.
      operationId: GetWebhookPolicyOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the webhook policy
        explode: false
        in: path
        name: webhook_policy_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPolicy'
          description: Get webhook policy successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get project webhook policy
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859702-run
    put:
      deprecated: false
      description: |
        This endpoint is aimed to update the webhook policy of a project.
      operationId: UpdateWebhookPolicyOfProject
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the webhook policy
        explode: false
        in: path
        name: webhook_policy_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update webhook policy of a project.
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859703-run
  /projects/{project_name_or_id}/webhook/lasttrigger:
    get:
      deprecated: false
      description: |
        This endpoint returns last trigger information of project webhook policy.
      operationId: LastTrigger
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookLastTrigger'
                type: array
          description: Test webhook connection successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get project webhook policy last trigger info
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859704-run
  /projects/{project_name_or_id}/webhook/events:
    get:
      deprecated: false
      description: Get supportted event types and notify types.
      operationId: GetSupportedEventTypes
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedWebhookEventTypes'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get supported event types and notify types.
      tags:
      - webhook
      x-apifox-folder: webhook
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859706-run
  /projects/{project_name_or_id}/webhook/jobs:
    get:
      deprecated: false
      description: |
        This endpoint returns webhook jobs of a project.
      operationId: ListWebhookJobs
      parameters:
      - description: The name or id of the project
        explode: false
        in: path
        name: project_name_or_id
        required: true
        schema:
          type: string
        style: simple
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The policy ID.
        explode: true
        in: query
        name: policy_id
        required: true
        schema:
          type: integer
        style: form
      - description: The status of webhook job.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: array
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The flag to indicate whether the parameter which supports both
          name and id in the path is the name of the resource. When the X-Is-Resource-Name
          is false and the parameter can be converted to an integer, the parameter
          will be as an id, otherwise, it will be as a name.
        explode: false
        in: header
        name: X-Is-Resource-Name
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookJob'
                type: array
          description: List project webhook jobs successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List project webhook jobs
      tags:
      - webhookjob
      x-apifox-folder: webhookjob
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859707-run
  /usergroups:
    get:
      deprecated: false
      description: Get all user groups information, it is open for system admin
      operationId: listUserGroups
      parameters:
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: search with ldap group DN
        explode: true
        in: query
        name: ldap_group_dn
        required: false
        schema:
          type: string
        style: form
      - description: group name need to search, fuzzy matches
        explode: true
        in: query
        name: group_name
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroup'
                type: array
          description: Get user group successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get all user groups information
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859708-run
    post:
      deprecated: false
      description: Create user group information
      operationId: createUserGroup
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User group created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create user group
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859709-run
  /usergroups/search:
    get:
      deprecated: false
      description: |
        This endpoint is to search groups by group name.  It's open for all authenticated requests.
      operationId: searchUserGroups
      parameters:
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Group name for filtering results.
        explode: true
        in: query
        name: groupname
        required: true
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserGroupSearchItem'
                type: array
          description: Search groups successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Search groups by groupname
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859710-run
  /usergroups/{group_id}:
    delete:
      deprecated: false
      description: Delete user group
      operationId: deleteUserGroup
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete user group
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859712-run
    get:
      deprecated: false
      description: Get user group information
      operationId: getUserGroup
      parameters:
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: User group get successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get user group information
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859711-run
    put:
      deprecated: false
      description: Update user group information
      operationId: updateUserGroup
      parameters:
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update group information
      tags:
      - usergroup
      x-apifox-folder: usergroup
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859714-run
  /icons/{digest}:
    get:
      deprecated: false
      description: Get the artifact icon with the specified digest. As the original
        icon image is resized and encoded before returning, the parameter "digest"
        in the path doesn't match the hash of the returned content
      operationId: getIcon
      parameters:
      - description: The digest of the resource
        explode: false
        in: path
        name: digest
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icon'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get artifact icon
      tags:
      - icon
      x-apifox-folder: icon
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859713-run
  /robots:
    get:
      deprecated: false
      description: List the robot accounts with the specified level and project.
      operationId: ListRobot
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Robot'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get robot account
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859715-run
    post:
      deprecated: false
      description: Create a robot account
      operationId: CreateRobot
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RobotCreated'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a robot account
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859716-run
  /robots/{robot_id}:
    delete:
      deprecated: false
      description: This endpoint deletes specific robot account information by robot
        ID.
      operationId: DeleteRobot
      parameters:
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete a robot account
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859720-run
    get:
      deprecated: false
      description: This endpoint returns specific robot account information by robot
        ID.
      operationId: GetRobotByID
      parameters:
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Robot'
          description: Return matched robot information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a robot account
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859717-run
    patch:
      deprecated: false
      description: Refresh the robot secret
      operationId: RefreshSec
      parameters:
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotSec'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RobotSec'
          description: Return refreshed robot sec.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Refresh the robot secret
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859718-run
    put:
      deprecated: false
      description: This endpoint updates specific robot account information by robot
        ID.
      operationId: UpdateRobot
      parameters:
      - description: Robot ID
        explode: false
        in: path
        name: robot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Robot'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update a robot account
      tags:
      - robot
      x-apifox-folder: robot
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859719-run
  /quotas:
    get:
      deprecated: false
      description: List quotas
      operationId: listQuotas
      parameters:
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The reference type of quota.
        explode: true
        in: query
        name: reference
        required: false
        schema:
          type: string
        style: form
      - description: The reference id of quota.
        explode: true
        in: query
        name: reference_id
        required: false
        schema:
          type: string
        style: form
      - description: |
          Sort method, valid values include:
          'hard.resource_name', '-hard.resource_name', 'used.resource_name', '-used.resource_name'.
          Here '-' stands for descending order, resource_name should be the real resource name of the quota.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Quota'
                type: array
          description: Successfully retrieved the quotas.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List quotas
      tags:
      - quota
      x-apifox-folder: quota
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859721-run
  /quotas/{id}:
    get:
      deprecated: false
      description: Get the specified quota
      operationId: getQuota
      parameters:
      - description: Quota ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quota'
          description: Successfully retrieved the quota.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specified quota
      tags:
      - quota
      x-apifox-folder: quota
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859722-run
    put:
      deprecated: false
      description: Update hard limits of the specified quota
      operationId: updateQuota
      parameters:
      - description: Quota ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaUpdateReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the specified quota
      tags:
      - quota
      x-apifox-folder: quota
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859723-run
  /replication/policies:
    get:
      deprecated: false
      description: List replication policies
      operationId: listReplicationPolicies
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Deprecated, use "query" instead. The policy name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReplicationPolicy'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List replication policies
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859724-run
    post:
      deprecated: false
      description: Create a replication policy
      operationId: createReplicationPolicy
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationPolicy'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a replication policy
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859726-run
  /replication/policies/{id}:
    delete:
      deprecated: false
      description: Delete the specific replication policy
      operationId: deleteReplicationPolicy
      parameters:
      - description: Replication policy ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the specific replication policy
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859727-run
    get:
      deprecated: false
      description: Get the specific replication policy
      operationId: getReplicationPolicy
      parameters:
      - description: Policy ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific replication policy
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859725-run
    put:
      deprecated: false
      description: Update the replication policy
      operationId: updateReplicationPolicy
      parameters:
      - description: The policy ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the replication policy
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859729-run
  /replication/executions:
    get:
      deprecated: false
      description: List replication executions
      operationId: listReplicationExecutions
      parameters:
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The ID of the policy that the executions belong to.
        explode: true
        in: query
        name: policy_id
        required: false
        schema:
          type: integer
        style: form
      - description: The execution status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: The trigger mode.
        explode: true
        in: query
        name: trigger
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReplicationExecution'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List replication executions
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859728-run
    post:
      deprecated: false
      description: Start one replication execution according to the policy
      operationId: startReplication
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReplicationExecution'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Start one replication execution
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859730-run
  /replication/executions/{id}:
    get:
      deprecated: false
      description: Get the replication execution specified by ID
      operationId: getReplicationExecution
      parameters:
      - description: The ID of the execution.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationExecution'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific replication execution
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859731-run
    put:
      deprecated: false
      description: Stop the replication execution specified by ID
      operationId: stopReplication
      parameters:
      - description: The ID of the execution.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop the specific replication execution
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859733-run
  /replication/executions/{id}/tasks:
    get:
      deprecated: false
      description: List replication tasks for a specific execution
      operationId: listReplicationTasks
      parameters:
      - description: The ID of the execution that the tasks belongs to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The task status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: The resource type.
        explode: true
        in: query
        name: resource_type
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReplicationTask'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List replication tasks for a specific execution
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859732-run
  /replication/executions/{id}/tasks/{task_id}/log:
    get:
      deprecated: false
      description: Get the log of the specific replication task
      operationId: getReplicationLog
      parameters:
      - description: The ID of the execution that the tasks belongs to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The ID of the task.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the log of the specific replication task
      tags:
      - replication
      x-apifox-folder: replication
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859734-run
  /replication/adapters:
    get:
      deprecated: false
      description: List registry adapters
      operationId: listRegistryProviderTypes
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List registry adapters
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859735-run
  /replication/adapterinfos:
    get:
      deprecated: false
      description: List all registered registry provider information
      operationId: listRegistryProviderInfos
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/RegistryProviderInfo'
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List all registered registry provider information
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859736-run
  /registries:
    get:
      deprecated: false
      description: List the registries
      operationId: listRegistries
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Deprecated, use `q` instead.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Registry'
                type: array
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List the registries
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859738-run
    post:
      deprecated: false
      description: Create a registry
      operationId: createRegistry
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a registry
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859737-run
  /registries/{id}:
    delete:
      deprecated: false
      description: Delete the specific registry
      operationId: deleteRegistry
      parameters:
      - description: Registry ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the specific registry
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859741-run
    get:
      deprecated: false
      description: Get the specific registry
      operationId: getRegistry
      parameters:
      - description: Registry ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific registry
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859739-run
    put:
      deprecated: false
      description: Update the registry
      operationId: updateRegistry
      parameters:
      - description: The registry ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the registry
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859742-run
  /registries/ping:
    post:
      deprecated: false
      description: Check status of a registry
      operationId: pingRegistry
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryPing'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Check status of a registry
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859740-run
  /registries/{id}/info:
    get:
      deprecated: false
      description: Get the registry info
      operationId: getRegistryInfo
      parameters:
      - description: Registry ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryInfo'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the registry info
      tags:
      - registry
      x-apifox-folder: registry
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859743-run
  /scans/all/metrics:
    get:
      deprecated: false
      description: Get the metrics of the latest scan all process
      operationId: getLatestScanAllMetrics
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the metrics of the latest scan all process
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859744-run
  /scans/schedule/metrics:
    get:
      deprecated: true
      description: Get the metrics of the latest scheduled scan all process
      operationId: getLatestScheduledScanAllMetrics
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the metrics of the latest scheduled scan all process
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: deprecated
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859745-run
  /system/scanAll/schedule:
    get:
      deprecated: false
      description: This endpoint is for getting a schedule for the scan all job, which
        scans all of images in Harbor.
      operationId: getScanAllSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: Get a schedule for the scan all job, which scans all of images
            in Harbor.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get scan all's schedule.
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859746-run
    post:
      deprecated: false
      description: This endpoint is for creating a schedule or a manual trigger for
        the scan all job, which scans all of images in Harbor.
      operationId: createScanAllSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a schedule or a manual trigger for the scan all job.
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859748-run
    put:
      deprecated: false
      description: This endpoint is for updating the schedule of scan all job, which
        scans all of images in Harbor.
      operationId: updateScanAllSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/412'
          description: "412"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update scan all's schedule.
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859747-run
  /system/scanAll/stop:
    post:
      deprecated: false
      description: Stop scanAll job execution
      operationId: stopScanAll
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop scanAll job execution
      tags:
      - scanAll
      x-apifox-folder: scanAll
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859749-run
  /systeminfo:
    get:
      deprecated: false
      description: |
        This API is for retrieving general system info, this can be called by anonymous request.  Some attributes will be omitted in the response when this API is called by anonymous request.
      operationId: getSystemInfo
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInfo'
          description: Get general info successfully.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get general system info
      tags:
      - systeminfo
      x-apifox-folder: systeminfo
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859750-run
  /systeminfo/volumes:
    get:
      deprecated: false
      description: |
        This endpoint is for retrieving system volume info that only provides for admin user.  Note that the response only reflects the storage status of local disk.
      operationId: getVolumes
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: Get system volumes successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get system volume info (total/free size).
      tags:
      - systeminfo
      x-apifox-folder: systeminfo
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859751-run
  /systeminfo/getcert:
    get:
      deprecated: false
      description: |
        This endpoint is for downloading a default root certificate.
      operationId: getCert
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Get default root certificate successfully.
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found the default root certificate.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get default root certificate.
      tags:
      - systeminfo
      x-apifox-folder: systeminfo
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859752-run
  /system/gc:
    get:
      deprecated: false
      description: This endpoint let user get gc execution history.
      operationId: getGCHistory
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GcHistory'
                type: array
          description: Get gc results successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get gc results.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859753-run
  /system/oidc/ping:
    post:
      deprecated: false
      description: |
        Test the OIDC endpoint, the setting of the endpoint is provided in the request.  This API can only be called by system admin.
      operationId: pingOIDC
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                url:
                  description: The URL of OIDC endpoint to be tested.
                  type: string
                verify_cert:
                  description: Whether the certificate should be verified
                  type: boolean
              type: object
              x-apifox-orders:
              - url
              - verify_cert
              x-apifox-ignore-properties: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
      summary: Test the OIDC endpoint.
      tags:
      - oidc
      x-apifox-folder: oidc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859754-run
  /system/gc/{gc_id}:
    get:
      deprecated: false
      description: This endpoint let user get gc status filtered by specific ID.
      operationId: getGC
      parameters:
      - description: The ID of the gc log
        explode: false
        in: path
        name: gc_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcHistory'
          description: Get gc results successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get gc status.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859755-run
    put:
      deprecated: false
      description: Stop the GC execution specified by ID
      operationId: stopGC
      parameters:
      - description: The ID of the gc log
        explode: false
        in: path
        name: gc_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop the specific GC execution
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859756-run
  /system/gc/{gc_id}/log:
    get:
      deprecated: false
      description: This endpoint let user get gc job logs filtered by specific ID.
      operationId: getGCLog
      parameters:
      - description: The ID of the gc log
        explode: false
        in: path
        name: gc_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Get successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get gc job log.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859757-run
  /system/gc/schedule:
    get:
      deprecated: false
      description: This endpoint is for get schedule of gc job.
      operationId: getGCSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GcHistory'
          description: Get gc's schedule.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get gc's schedule.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859758-run
    post:
      deprecated: false
      description: |
        This endpoint is for update gc schedule.
      operationId: createGCSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a gc schedule.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859759-run
    put:
      deprecated: false
      description: |
        This endpoint is for update gc schedule.
      operationId: updateGCSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Updated gc's schedule successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update gc's schedule.
      tags:
      - gc
      x-apifox-folder: gc
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859760-run
  /system/purgeaudit:
    get:
      deprecated: false
      description: get purge job execution history.
      operationId: getPurgeHistory
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExecHistory'
                type: array
          description: Get purge job results successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get purge job results.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859761-run
  /system/purgeaudit/{purge_id}:
    get:
      deprecated: false
      description: This endpoint let user get purge job status filtered by specific
        ID.
      operationId: getPurgeJob
      parameters:
      - description: The ID of the purge log
        explode: false
        in: path
        name: purge_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecHistory'
          description: Get purge job results successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get purge job status.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859762-run
    put:
      deprecated: false
      description: Stop the purge audit log execution specified by ID
      operationId: stopPurge
      parameters:
      - description: The ID of the purge log
        explode: false
        in: path
        name: purge_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop the specific purge audit log execution
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859763-run
  /system/purgeaudit/{purge_id}/log:
    get:
      deprecated: false
      description: This endpoint let user get purge job logs filtered by specific
        ID.
      operationId: getPurgeJobLog
      parameters:
      - description: The ID of the purge log
        explode: false
        in: path
        name: purge_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Get successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get purge job log.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859764-run
  /system/purgeaudit/schedule:
    get:
      deprecated: false
      description: This endpoint is for get schedule of purge job.
      operationId: getPurgeSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecHistory'
          description: Get purge job's schedule.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get purge's schedule.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859765-run
    post:
      deprecated: false
      description: |
        This endpoint is for update purge job schedule.
      operationId: createPurgeSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a purge job schedule.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859766-run
    put:
      deprecated: false
      description: |
        This endpoint is for update purge job schedule.
      operationId: updatePurgeSchedule
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Updated purge's schedule successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update purge job's schedule.
      tags:
      - purge
      x-apifox-folder: purge
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859767-run
  /system/CVEAllowlist:
    get:
      deprecated: false
      description: Get the system level allowlist of CVE.  This API can be called
        by all authenticated users.
      operationId: getSystemCVEAllowlist
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CveAllowlist'
          description: Successfully retrieved the CVE allowlist.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the system level allowlist of CVE.
      tags:
      - SystemCVEAllowlist
      x-apifox-folder: SystemCVEAllowlist
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859768-run
    put:
      deprecated: false
      description: This API overwrites the system level allowlist of CVE with the
        list in request body.  Only system Admin has permission to call this API.
      operationId: putSystemCVEAllowlist
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CveAllowlist'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Successfully updated the CVE allowlist.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the system level allowlist of CVE.
      tags:
      - SystemCVEAllowlist
      x-apifox-folder: SystemCVEAllowlist
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859769-run
  /ping:
    get:
      deprecated: false
      description: This API simply replies a pong to indicate the process to handle
        API is up, disregarding the health status of dependent components.
      operationId: getPing
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: The API server is alive
      summary: Ping Harbor to check if it's alive.
      tags:
      - ping
      x-apifox-folder: ping
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859770-run
  /retentions/metadatas:
    get:
      deprecated: false
      description: Get Retention Metadatas.
      operationId: getRentenitionMetadata
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionMetadata'
          description: Get Retention Metadatas successfully.
      summary: Get Retention Metadatas
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859771-run
  /retentions:
    post:
      deprecated: false
      description: Create Retention Policy, you can reference metadatas API for the
        policy model. You can check project metadatas to find whether a retention
        policy is already binded. This method should only be called when no retention
        policy binded to project yet.
      operationId: createRetention
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPolicy'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create Retention Policy
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859772-run
  /retentions/{id}:
    delete:
      deprecated: false
      description: Delete Retention Policy, you can reference metadatas API for the
        policy model. You can check project metadatas to find whether a retention
        policy is already binded. This method should only be called when retention
        policy has already binded to project.
      operationId: deleteRetention
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Update Retention Policy successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete Retention Policy
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859775-run
    get:
      deprecated: false
      description: Get Retention Policy.
      operationId: getRetention
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicy'
          description: Get Retention Policy successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get Retention Policy
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859773-run
    put:
      deprecated: false
      description: Update Retention Policy, you can reference metadatas API for the
        policy model. You can check project metadatas to find whether a retention
        policy is already binded. This method should only be called when retention
        policy has already binded to project.
      operationId: updateRetention
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPolicy'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Update Retention Policy successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update Retention Policy
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859774-run
  /retentions/{id}/executions:
    get:
      deprecated: false
      description: Get Retention executions, execution status may be delayed before
        job service schedule it up.
      operationId: listRetentionExecutions
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RetentionExecution'
                type: array
          description: Get a Retention execution successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get Retention executions
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859777-run
    post:
      deprecated: false
      description: Trigger a Retention Execution, if dry_run is True, nothing would
        be deleted actually.
      operationId: triggerRetentionExecution
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                dry_run:
                  type: boolean
              type: object
              x-apifox-orders:
              - dry_run
              x-apifox-ignore-properties: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Trigger a Retention job successfully.
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Trigger a Retention Execution
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859776-run
  /retentions/{id}/executions/{eid}:
    patch:
      deprecated: false
      description: Stop a Retention execution, only support "stop" action now.
      operationId: operateRetentionExecution
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Retention execution ID.
        explode: false
        in: path
        name: eid
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                action:
                  type: string
              type: object
              x-apifox-orders:
              - action
              x-apifox-ignore-properties: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Stop a Retention job successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Stop a Retention execution
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859778-run
  /retentions/{id}/executions/{eid}/tasks:
    get:
      deprecated: false
      description: Get Retention tasks, each repository as a task.
      operationId: listRetentionTasks
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Retention execution ID.
        explode: false
        in: path
        name: eid
        required: true
        schema:
          type: integer
        style: simple
      - description: The page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RetentionExecutionTask'
                type: array
          description: Get Retention job tasks successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get Retention tasks
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859779-run
  /retentions/{id}/executions/{eid}/tasks/{tid}:
    get:
      deprecated: false
      description: Get Retention job task log, tags ratain or deletion detail will
        be shown in a table.
      operationId: getRetentionTaskLog
      parameters:
      - description: Retention ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Retention execution ID.
        explode: false
        in: path
        name: eid
        required: true
        schema:
          type: integer
        style: simple
      - description: Retention execution ID.
        explode: false
        in: path
        name: tid
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Get Retention job task log successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get Retention job task log
      tags:
      - Retention
      x-apifox-folder: Retention
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859780-run
  /scanners:
    get:
      deprecated: false
      description: |
        Returns a list of currently configured scanner registrations.
      operationId: listScanners
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScannerRegistration'
                type: array
          description: A list of scanner registrations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List scanner registrations
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859781-run
    post:
      deprecated: false
      description: |
        Creats a new scanner registration with the given data.
      operationId: createScanner
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScannerRegistrationReq'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a scanner registration
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859782-run
  /scanners/{registration_id}:
    delete:
      deprecated: false
      description: |
        Deletes the specified scanner registration.
      operationId: deleteScanner
      parameters:
      - description: The scanner registration identifier.
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerRegistration'
          description: Deleted successfully and return the deleted registration
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete a scanner registration
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859786-run
    get:
      deprecated: false
      description: |
        Retruns the details of the specified scanner registration.
      operationId: getScanner
      parameters:
      - description: The scanner registration identifer.
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerRegistration'
          description: The details of the scanner registration.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a scanner registration details
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859783-run
    patch:
      deprecated: false
      description: |
        Set the specified scanner registration as the system default one.
      operationId: setScannerAsDefault
      parameters:
      - description: The scanner registration identifier.
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsDefault'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Successfully set the specified scanner registration as system
            default
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Set system default scanner registration
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859787-run
    put:
      deprecated: false
      description: |
        Updates the specified scanner registration.
      operationId: updateScanner
      parameters:
      - description: The scanner registration identifier.
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScannerRegistrationReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update a scanner registration
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859785-run
  /scanners/ping:
    post:
      deprecated: false
      description: |
        Pings scanner adapter to test endpoint URL and authorization settings.
      operationId: pingScanner
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScannerRegistrationSettings'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Tests scanner registration settings
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859784-run
  /scanners/{registration_id}/metadata:
    get:
      deprecated: false
      description: |
        Get the metadata of the specified scanner registration, including the capabilities and customized properties.
      operationId: getScannerMetadata
      parameters:
      - description: The scanner registration identifier.
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          type: string
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScannerAdapterMetadata'
          description: The metadata of the specified scanner adapter
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the metadata of the specified scanner registration
      tags:
      - scanner
      x-apifox-folder: scanner
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859788-run
  /users:
    get:
      deprecated: false
      operationId: listUsers
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserResp'
                type: array
          description: return the list of users.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List users
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859789-run
    post:
      deprecated: false
      description: This API can be used only when the authentication mode is for local
        DB.  When self registration is disabled.
      operationId: createUser
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationReq'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: When the  self registration is disabled, non-admin does not
            have permission to create user.  When self registration is enabled, this
            API can only be called from UI portal, calling it via script will get
            a 403 error.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Create a local user.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859790-run
  /users/current:
    get:
      deprecated: false
      operationId: getCurrentUserInfo
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResp'
          description: Get current user information successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get current user info.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859791-run
  /users/search:
    get:
      deprecated: false
      description: |
        This endpoint is to search the users by username.  It's open for all authenticated requests.
      operationId: searchUsers
      parameters:
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: Username for filtering results.
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSearchRespItem'
                type: array
          description: Search users by username successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Search users by username
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859792-run
  /users/{user_id}:
    delete:
      deprecated: false
      description: |
        This endpoint let administrator of Harbor mark a registered user as removed.It actually won't be deleted from DB.
      operationId: deleteUser
      parameters:
      - description: User ID for marking as to be removed.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Mark a registered user as be removed.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859795-run
    get:
      deprecated: false
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResp'
          description: Get user's info successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a user's profile.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859793-run
    put:
      deprecated: false
      operationId: updateUserProfile
      parameters:
      - description: Registered user ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update user's profile.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859794-run
  /users/{user_id}/sysadmin:
    put:
      deprecated: false
      operationId: setUserSysAdmin
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSysAdminFlag'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Unexpected internal errors.
      summary: Update a registered user to change to be an administrator of Harbor.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859796-run
  /users/{user_id}/password:
    put:
      deprecated: false
      description: |
        This endpoint is for user to update password. Users with the admin role can change any user's password. Regular users can change only their own password.
      operationId: updateUserPassword
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Invalid user ID; Password does not meet requirement
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: The caller does not have permission to update the password
            of the user with given ID, or the old password in request body is not
            correct.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Change the password on a user that already exists.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859797-run
  /users/current/permissions:
    get:
      deprecated: false
      operationId: getCurrentUserPermissions
      parameters:
      - description: The scope for the permission
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: |
          If true, the resources in the response are relative to the scope,
          eg for resource '/project/1/repository' if relative is 'true' then the resource in response will be 'repository'.
        explode: true
        in: query
        name: relative
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
          description: Get current user permission successfully.
        "401":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: User need to log in first.
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal errors.
      summary: Get current user permissions.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859798-run
  /users/{user_id}/cli_secret:
    put:
      deprecated: false
      description: This endpoint let user generate a new CLI secret for himself.  This
        API only works when auth mode is set to 'OIDC'. Once this API returns with
        successful status, the old secret will be invalid, as there will be only one
        CLI secret for a user.
      operationId: setCliSecret
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcCliSecretReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: The secret is successfully updated
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Invalid user ID.  Or user is not onboarded via OIDC authentication.
            Or the secret does not meet the standard.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "412":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: The auth mode of the system is not "oidc_auth", or the user
            is not onboarded via OIDC AuthN.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Set CLI secret for a user.
      tags:
      - user
      x-apifox-folder: user
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859799-run
  /labels:
    get:
      deprecated: false
      description: |
        This endpoint let user list labels by name, scope and project_id
      operationId: ListLabels
      parameters:
      - description: Query string to query resources. Supported query patterns are
          "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
          union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1
          v2 v3))". The value of range and list can be string(enclosed by " or '),
          integer or time(in format "2020-04-09 02:36:00"). All of these query patterns
          should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Sort the resource list in ascending or descending order. e.g.
          sort by field1 in ascending orderr and field2 in descending order with "sort=field1,-field2"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: The page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: The size of per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      - description: The label name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The label scope. Valid values are g and p. g for global labels
          and p for project labels.
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: Relevant project ID, required when scope is p.
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          type: integer
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: Get successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: List labels according to the query strings.
      tags:
      - label
      x-apifox-folder: label
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859801-run
    post:
      deprecated: false
      description: |
        This endpoint let user creates a label.
      operationId: CreateLabel
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Create successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415'
          description: "415"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Post creates a label
      tags:
      - label
      x-apifox-folder: label
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859802-run
  /labels/{label_id}:
    delete:
      deprecated: false
      description: |
        Delete the label specified by ID.
      operationId: DeleteLabel
      parameters:
      - description: Label ID
        explode: false
        in: path
        name: label_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Delete the label specified by ID.
      tags:
      - label
      x-apifox-folder: label
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859806-run
    get:
      deprecated: false
      description: |
        This endpoint let user get the label by specific ID.
      operationId: GetLabelByID
      parameters:
      - description: Label ID
        explode: false
        in: path
        name: label_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Get successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the label specified by ID.
      tags:
      - label
      x-apifox-folder: label
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859803-run
    put:
      deprecated: false
      description: |
        This endpoint let user update label properties.
      operationId: UpdateLabel
      parameters:
      - description: Label ID
        explode: false
        in: path
        name: label_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-ignore-properties: []
                x-apifox-orders: []
          description: 成功
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Update the label properties.
      tags:
      - label
      x-apifox-folder: label
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859804-run
  /export/cve:
    post:
      deprecated: false
      description: Export scan data for selected projects
      operationId: exportScanData
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      - description: The type of scan data to export
        explode: false
        in: header
        name: X-Scan-Data-Type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDataExportRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDataExportJob'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
          description: "400"
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
          description: "405"
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
          description: "409"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Export scan data for selected projects
      tags:
      - scan data export
      x-apifox-folder: scan data export
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859805-run
  /export/cve/execution/{execution_id}:
    get:
      deprecated: false
      description: Get the scan data export execution specified by ID
      operationId: getScanDataExportExecution
      parameters:
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDataExportExecution'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get the specific scan data export execution
      tags:
      - scan data export
      x-apifox-folder: scan data export
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859807-run
  /export/cve/executions:
    get:
      deprecated: false
      description: Get a list of specific scan data export execution jobs for a specified
        user
      operationId: getScanDataExportExecutionList
      parameters:
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDataExportExecutionList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Get a list of specific scan data export execution jobs for a specified
        user
      tags:
      - scan data export
      x-apifox-folder: scan data export
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859808-run
  /export/cve/download/{execution_id}:
    get:
      deprecated: false
      description: Download the scan data report. Default format is CSV
      operationId: downloadScanData
      parameters:
      - description: Execution ID
        explode: false
        in: path
        name: execution_id
        required: true
        schema:
          type: integer
        style: simple
      - description: The format of the data to be exported. e.g. CSV or PDF
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      - description: An unique ID for the request
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Data file containing the export data
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
          description: "401"
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
          description: "403"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
          description: "404"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
          description: "500"
      summary: Download the scan data export file
      tags:
      - scan data export
      x-apifox-folder: scan data export
      x-apifox-status: released
      x-run-in-apifox: https://www.apifox.cn/web/project/1751065/apis/api-43859809-run
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    "400":
      $ref: '#/components/schemas/Errors'
    "401":
      $ref: '#/components/schemas/Errors'
    "403":
      $ref: '#/components/schemas/Errors'
    "404":
      $ref: '#/components/schemas/Errors'
    "405":
      $ref: '#/components/schemas/Errors'
    "409":
      $ref: '#/components/schemas/Errors'
    "412":
      $ref: '#/components/schemas/Errors'
    "415":
      $ref: '#/components/schemas/Errors'
    "500":
      $ref: '#/components/schemas/Errors'
    AddProjectMetadatasMetadata:
      additionalProperties:
        type: string
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: RequestBodies
    ScanDataExportExecutionList:
      description: The list of scan data export executions
      example:
        items:
        - start_time: 2000-01-23T04:56:07.000+00:00
          user_id: 6
          user_name: user_name
          end_time: 2000-01-23T04:56:07.000+00:00
          id: 0
          trigger: trigger
          status_text: status_text
          status: status
          file_present: true
        - start_time: 2000-01-23T04:56:07.000+00:00
          user_id: 6
          user_name: user_name
          end_time: 2000-01-23T04:56:07.000+00:00
          id: 0
          trigger: trigger
          status_text: status_text
          status: status
          file_present: true
      properties:
        items:
          description: The list of scan data export executions
          items:
            $ref: '#/components/schemas/ScanDataExportExecution'
          type: array
      type: object
      x-apifox-orders:
      - items
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScanDataExportExecution:
      description: The replication execution
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        user_id: 6
        user_name: user_name
        end_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        trigger: trigger
        status_text: status_text
        status: status
        file_present: true
      properties:
        id:
          description: The ID of the execution
          type: integer
        user_id:
          description: The ID if the user triggering the export job
          type: integer
        status:
          description: The status of the execution
          type: string
        trigger:
          description: The trigger mode
          type: string
        start_time:
          description: The start time
          format: date-time
          type: string
        end_time:
          description: The end time
          format: date-time
          type: string
        status_text:
          description: The status text
          type: string
          x-omitempty: false
        user_name:
          description: The name of the user triggering the job
          type: string
          x-omitempty: false
        file_present:
          description: Indicates whether the export artifact is present in registry
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - id
      - user_id
      - status
      - trigger
      - start_time
      - end_time
      - status_text
      - user_name
      - file_present
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScanDataExportJob:
      description: The metadata associated with the scan data export job
      example:
        id: 0
      properties:
        id:
          description: The id of the scan data export job
          format: int64
          type: integer
      type: object
      x-apifox-orders:
      - id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScanDataExportRequest:
      description: The criteria to select the scan data to export.
      example:
        projects:
        - 0
        - 0
        job_name: job_name
        repositories: repositories
        cveIds: cveIds
        labels:
        - 6
        - 6
        tags: tags
      properties:
        job_name:
          description: Name of the scan data export job
          type: string
        projects:
          description: A list of one or more projects for which to export the scan
            data, currently only one project is supported due to performance concerns,
            but define as array for extension in the future.
          items:
            format: int64
            type: integer
          type: array
        labels:
          description: A list of one or more labels for which to export the scan data,
            defaults to all if empty
          items:
            format: int64
            type: integer
          type: array
        repositories:
          description: A list of repositories for which to export the scan data, defaults
            to all if empty
          type: string
        cveIds:
          description: CVE-IDs for which to export data. Multiple CVE-IDs can be specified
            by separating using ',' and enclosed between '{}'. Defaults to all if
            empty
          type: string
        tags:
          description: A list of tags enclosed within '{}'. Defaults to all if empty
          type: string
      type: object
      x-apifox-orders:
      - job_name
      - projects
      - labels
      - repositories
      - cveIds
      - tags
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Accessory:
      description: The accessory of the artifact
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        size: 4
        digest: digest
        icon: icon
        id: 9
        artifact_id: 3
        subject_artifact_id: 2
        type: type
      properties:
        id:
          description: The ID of the accessory
          format: int64
          type: integer
        artifact_id:
          description: The artifact id of the accessory
          format: int64
          type: integer
          x-omitempty: false
        subject_artifact_id:
          description: The subject artifact id of the accessory
          format: int64
          type: integer
          x-omitempty: false
        size:
          description: The artifact size of the accessory
          format: int64
          type: integer
          x-omitempty: false
        digest:
          description: The artifact digest of the accessory
          type: string
          x-omitempty: false
        type:
          description: The artifact size of the accessory
          type: string
          x-omitempty: false
        icon:
          description: The icon of the accessory
          type: string
          x-omitempty: false
        creation_time:
          description: The creation time of the accessory
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - artifact_id
      - subject_artifact_id
      - size
      - digest
      - type
      - icon
      - creation_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Statistic:
      example:
        private_project_count: 0
        public_repo_count: 5
        total_repo_count: 2
        total_project_count: 5
        private_repo_count: 6
        public_project_count: 1
        total_storage_consumption: 7
      properties:
        private_project_count:
          description: The count of the private projects
          format: int64
          type: integer
          x-omitempty: false
        private_repo_count:
          description: The count of the private repositories
          format: int64
          type: integer
          x-omitempty: false
        public_project_count:
          description: The count of the public projects
          format: int64
          type: integer
          x-omitempty: false
        public_repo_count:
          description: The count of the public repositories
          format: int64
          type: integer
          x-omitempty: false
        total_project_count:
          description: The count of the total projects, only be seen by the system
            admin
          format: int64
          type: integer
          x-omitempty: false
        total_repo_count:
          description: The count of the total repositories, only be seen by the system
            admin
          format: int64
          type: integer
          x-omitempty: false
        total_storage_consumption:
          description: The total storage consumption of blobs, only be seen by the
            system admin
          format: int64
          type: integer
          x-omitempty: false
      type: object
      x-apifox-orders:
      - private_project_count
      - private_repo_count
      - public_project_count
      - public_repo_count
      - total_project_count
      - total_repo_count
      - total_storage_consumption
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ComponentHealthStatus:
      description: The health status of component
      example:
        name: name
        error: error
        status: status
      properties:
        name:
          description: The component name
          type: string
        status:
          description: The health status of component
          type: string
        error:
          description: (optional) The error message when the status is "unhealthy"
          type: string
      type: object
      x-apifox-orders:
      - name
      - status
      - error
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OverallHealthStatus:
      description: The system health status
      example:
        components:
        - name: name
          error: error
          status: status
        - name: name
          error: error
          status: status
        status: status
      properties:
        status:
          description: The overall health status. It is "healthy" only when all the
            components' status are "healthy"
          type: string
        components:
          items:
            $ref: '#/components/schemas/ComponentHealthStatus'
          type: array
      type: object
      x-apifox-orders:
      - status
      - components
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OidcCliSecretReq:
      example:
        secret: secret
      properties:
        secret:
          description: The new secret
          type: string
      type: object
      x-apifox-orders:
      - secret
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Permission:
      example:
        resource: resource
        action: action
      properties:
        resource:
          description: The permission resoruce
          type: string
        action:
          description: The permission action
          type: string
      type: object
      x-apifox-orders:
      - resource
      - action
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserSearchRespItem:
      example:
        user_id: 0
        username: username
      properties:
        user_id:
          description: The ID of the user.
          format: int
          type: integer
        username:
          type: string
      type: object
      x-apifox-orders:
      - user_id
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PasswordReq:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        old_password:
          description: The user's existing password.
          type: string
        new_password:
          description: New password for marking as to be updated.
          type: string
      type: object
      x-apifox-orders:
      - old_password
      - new_password
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserSearch:
      properties:
        user_id:
          description: The ID of the user.
          format: int
          type: integer
        username:
          type: string
      type: object
      x-apifox-orders:
      - user_id
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserSysAdminFlag:
      example:
        sysadmin_flag: true
      properties:
        sysadmin_flag:
          description: true-admin, false-not admin.
          type: boolean
      type: object
      x-apifox-orders:
      - sysadmin_flag
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserResp:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        user_id: 0
        sysadmin_flag: true
        comment: comment
        admin_role_in_auth: true
        oidc_user_meta:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          user_id: 1
          subiss: subiss
          id: 6
          secret: secret
        email: email
        realname: realname
        username: username
      properties:
        email:
          type: string
        realname:
          type: string
        comment:
          type: string
        user_id:
          format: int
          type: integer
        username:
          type: string
        sysadmin_flag:
          type: boolean
          x-omitempty: false
        admin_role_in_auth:
          description: indicate the admin privilege is grant by authenticator (LDAP),
            is always false unless it is the current login user
          type: boolean
          x-omitempty: false
        oidc_user_meta:
          $ref: '#/components/schemas/OidcUserInfo'
        creation_time:
          description: The creation time of the user.
          format: date-time
          type: string
        update_time:
          description: The update time of the user.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - email
      - realname
      - comment
      - user_id
      - username
      - sysadmin_flag
      - admin_role_in_auth
      - oidc_user_meta
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OidcUserInfo:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        user_id: 1
        subiss: subiss
        id: 6
        secret: secret
      properties:
        id:
          description: the ID of the OIDC info record
          format: int
          type: integer
        user_id:
          description: the ID of the user
          format: int
          type: integer
        subiss:
          description: the concatenation of sub and issuer in the ID token
          type: string
        secret:
          description: the secret of the OIDC user that can be used for CLI to push/pull
            artifacts
          type: string
        creation_time:
          description: The creation time of the OIDC user info record.
          format: date-time
          type: string
        update_time:
          description: The update time of the OIDC user info record.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - user_id
      - subiss
      - secret
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserCreationReq:
      example:
        password: password
        comment: comment
        email: email
        realname: realname
        username: username
      properties:
        email:
          maxLength: 255
          type: string
        realname:
          type: string
        comment:
          type: string
        password:
          type: string
        username:
          maxLength: 255
          type: string
      type: object
      x-apifox-orders:
      - email
      - realname
      - comment
      - password
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserProfile:
      example:
        comment: comment
        email: email
        realname: realname
      properties:
        email:
          type: string
        realname:
          type: string
        comment:
          type: string
      type: object
      x-apifox-orders:
      - email
      - realname
      - comment
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserEntity:
      example:
        user_id: 6
        username: username
      properties:
        user_id:
          description: The ID of the user.
          type: integer
        username:
          description: The name of the user.
          type: string
      type: object
      x-apifox-orders:
      - user_id
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RoleRequest:
      example:
        role_id: 0
      properties:
        role_id:
          description: The role id 1 for projectAdmin, 2 for developer, 3 for guest,
            4 for maintainer
          type: integer
      type: object
      x-apifox-orders:
      - role_id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectMember:
      example:
        role_id: 0
        member_group:
          group_name: group_name
          ldap_group_dn: ldap_group_dn
          id: 0
          group_type: 6
        member_user:
          user_id: 6
          username: username
      properties:
        role_id:
          description: The role id 1 for projectAdmin, 2 for developer, 3 for guest,
            4 for maintainer
          type: integer
        member_user:
          $ref: '#/components/schemas/UserEntity'
        member_group:
          $ref: '#/components/schemas/UserGroup'
      type: object
      x-apifox-orders:
      - role_id
      - member_user
      - member_group
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectMemberEntity:
      example:
        role_name: role_name
        entity_type: entity_type
        project_id: 6
        entity_name: entity_name
        role_id: 1
        id: 0
        entity_id: 5
      properties:
        id:
          description: the project member id
          type: integer
        project_id:
          description: the project id
          type: integer
        entity_name:
          description: the name of the group member.
          type: string
        role_name:
          description: the name of the role
          type: string
        role_id:
          description: the role id
          type: integer
        entity_id:
          description: the id of entity, if the member is a user, it is user_id in
            user table. if the member is a user group, it is the user group's ID in
            user_group table.
          type: integer
        entity_type:
          description: the entity's type, u for user entity, g for group entity.
          type: string
      type: object
      x-apifox-orders:
      - id
      - project_id
      - entity_name
      - role_name
      - role_id
      - entity_id
      - entity_type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    IntegerConfigItem:
      example:
        editable: true
        value: 0
      properties:
        value:
          description: The integer value of current config item
          type: integer
          x-omitempty: false
        editable:
          description: The configure item can be updated or not
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - value
      - editable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BoolConfigItem:
      example:
        editable: true
        value: true
      properties:
        value:
          description: The boolean value of current config item
          type: boolean
          x-omitempty: false
        editable:
          description: The configure item can be updated or not
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - value
      - editable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    StringConfigItem:
      example:
        editable: true
        value: value
      properties:
        value:
          description: The string value of current config item
          type: string
          x-omitempty: false
        editable:
          description: The configure item can be updated or not
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - value
      - editable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Configurations:
      example:
        oidc_groups_claim: oidc_groups_claim
        email_ssl: true
        notification_enable: true
        ldap_timeout: 5
        ldap_filter: ldap_filter
        ldap_group_admin_dn: ldap_group_admin_dn
        email_password: email_password
        ldap_group_membership_attribute: ldap_group_membership_attribute
        http_authproxy_verify_cert: true
        oidc_admin_group: oidc_admin_group
        skip_audit_log_database: true
        email_insecure: true
        oidc_verify_cert: true
        read_only: true
        ldap_group_attribute_name: ldap_group_attribute_name
        ldap_url: ldap_url
        robot_name_prefix: robot_name_prefix
        ldap_group_search_filter: ldap_group_search_filter
        self_registration: true
        uaa_client_secret: uaa_client_secret
        oidc_user_claim: oidc_user_claim
        oidc_client_id: oidc_client_id
        ldap_search_password: ldap_search_password
        oidc_endpoint: oidc_endpoint
        email_identity: email_identity
        ldap_search_dn: ldap_search_dn
        http_authproxy_skip_search: true
        uaa_client_id: uaa_client_id
        http_authproxy_endpoint: http_authproxy_endpoint
        audit_log_forward_endpoint: audit_log_forward_endpoint
        http_authproxy_admin_groups: http_authproxy_admin_groups
        auth_mode: auth_mode
        ldap_verify_cert: true
        ldap_group_base_dn: ldap_group_base_dn
        email_port: 0
        http_authproxy_tokenreview_endpoint: http_authproxy_tokenreview_endpoint
        oidc_extra_redirect_parms: oidc_extra_redirect_parms
        token_expiration: 5
        ldap_scope: 1
        http_authproxy_admin_usernames: http_authproxy_admin_usernames
        oidc_name: oidc_name
        uaa_endpoint: uaa_endpoint
        email_username: email_username
        ldap_base_dn: ldap_base_dn
        ldap_group_search_scope: 6
        oidc_scope: oidc_scope
        project_creation_restriction: project_creation_restriction
        storage_per_project: 7
        oidc_client_secret: oidc_client_secret
        quota_per_project_enable: true
        oidc_auto_onboard: true
        ldap_uid: ldap_uid
        http_authproxy_server_certificate: http_authproxy_server_certificate
        robot_token_duration: 2
        uaa_verify_cert: true
        email_from: email_from
        email_host: email_host
      properties:
        auth_mode:
          description: The auth mode of current system, such as "db_auth", "ldap_auth",
            "oidc_auth"
          type: string
          x-omitempty: true
          x-isnullable: true
        email_from:
          description: The sender name for Email notification.
          type: string
          x-omitempty: true
          x-isnullable: true
        email_host:
          description: The hostname of SMTP server that sends Email notification.
          type: string
          x-omitempty: true
          x-isnullable: true
        email_identity:
          description: By default it's empty so the email_username is picked
          type: string
          x-omitempty: true
          x-isnullable: true
        email_insecure:
          description: Whether or not the certificate will be verified when Harbor
            tries to access the email server.
          type: boolean
          x-omitempty: true
          x-isnullable: true
        email_password:
          description: Email password
          type: string
          x-omitempty: true
          x-isnullable: true
        email_port:
          description: The port of SMTP server
          type: integer
          x-omitempty: true
          x-isnullable: true
        email_ssl:
          description: When it''s set to true the system will access Email server
            via TLS by default.  If it''s set to false, it still will handle "STARTTLS"
            from server side.
          type: boolean
          x-omitempty: true
          x-isnullable: true
        email_username:
          description: The username for authenticate against SMTP server
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_base_dn:
          description: The Base DN for LDAP binding.
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_filter:
          description: The filter for LDAP search
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_group_base_dn:
          description: The base DN to search LDAP group.
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_group_admin_dn:
          description: Specify the ldap group which have the same privilege with Harbor
            admin
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_group_attribute_name:
          description: The attribute which is used as identity of the LDAP group,
            default is cn.'
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_group_search_filter:
          description: The filter to search the ldap group
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_group_search_scope:
          description: The scope to search ldap group. ''0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
            2-LDAP_SCOPE_SUBTREE''
          type: integer
          x-omitempty: true
          x-isnullable: true
        ldap_scope:
          description: The scope to search ldap users,'0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
            2-LDAP_SCOPE_SUBTREE'
          type: integer
          x-omitempty: true
          x-isnullable: true
        ldap_search_dn:
          description: The DN of the user to do the search.
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_search_password:
          description: The password of the ldap search dn
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_timeout:
          description: Timeout in seconds for connection to LDAP server
          type: integer
          x-omitempty: true
          x-isnullable: true
        ldap_uid:
          description: The attribute which is used as identity for the LDAP binding,
            such as "CN" or "SAMAccountname"
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_url:
          description: The URL of LDAP server
          type: string
          x-omitempty: true
          x-isnullable: true
        ldap_verify_cert:
          description: Whether verify your OIDC server certificate, disable it if
            your OIDC server is hosted via self-hosted certificate.
          type: boolean
          x-omitempty: true
          x-isnullable: true
        ldap_group_membership_attribute:
          description: The user attribute to identify the group membership
          type: string
          x-omitempty: true
          x-isnullable: true
        project_creation_restriction:
          description: Indicate who can create projects, it could be ''adminonly''
            or ''everyone''.
          type: string
          x-omitempty: true
          x-isnullable: true
        read_only:
          description: The flag to indicate whether Harbor is in readonly mode.
          type: boolean
          x-omitempty: true
          x-isnullable: true
        self_registration:
          description: Whether the Harbor instance supports self-registration.  If
            it''s set to false, admin need to add user to the instance.
          type: boolean
          x-omitempty: true
          x-isnullable: true
        token_expiration:
          description: The expiration time of the token for internal Registry, in
            minutes.
          type: integer
          x-omitempty: true
          x-isnullable: true
        uaa_client_id:
          description: The client id of UAA
          type: string
          x-omitempty: true
          x-isnullable: true
        uaa_client_secret:
          description: The client secret of the UAA
          type: string
          x-omitempty: true
          x-isnullable: true
        uaa_endpoint:
          description: The endpoint of the UAA
          type: string
          x-omitempty: true
          x-isnullable: true
        uaa_verify_cert:
          description: Verify the certificate in UAA server
          type: boolean
          x-omitempty: true
          x-isnullable: true
        http_authproxy_endpoint:
          description: The endpoint of the HTTP auth
          type: string
          x-omitempty: true
          x-isnullable: true
        http_authproxy_tokenreview_endpoint:
          description: The token review endpoint
          type: string
          x-omitempty: true
          x-isnullable: true
        http_authproxy_admin_groups:
          description: The group which has the harbor admin privileges
          type: string
          x-omitempty: true
          x-isnullable: true
        http_authproxy_admin_usernames:
          description: The username which has the harbor admin privileges
          type: string
          x-omitempty: true
          x-isnullable: true
        http_authproxy_verify_cert:
          description: Verify the HTTP auth provider's certificate
          type: boolean
          x-omitempty: true
          x-isnullable: true
        http_authproxy_skip_search:
          description: Search user before onboard
          type: boolean
          x-omitempty: true
          x-isnullable: true
        http_authproxy_server_certificate:
          description: The certificate of the HTTP auth provider
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_name:
          description: The OIDC provider name
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_endpoint:
          description: The endpoint of the OIDC provider
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_client_id:
          description: The client ID of the OIDC provider
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_client_secret:
          description: The OIDC provider secret
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_groups_claim:
          description: The attribute claims the group name
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_admin_group:
          description: The OIDC group which has the harbor admin privileges
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_scope:
          description: The scope of the OIDC provider
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_user_claim:
          description: The attribute claims the username
          type: string
          x-omitempty: true
          x-isnullable: true
        oidc_verify_cert:
          description: Verify the OIDC provider's certificate'
          type: boolean
          x-omitempty: true
          x-isnullable: true
        oidc_auto_onboard:
          description: Auto onboard the OIDC user
          type: boolean
          x-omitempty: true
          x-isnullable: true
        oidc_extra_redirect_parms:
          description: Extra parameters to add when redirect request to OIDC provider
          type: string
          x-omitempty: true
          x-isnullable: true
        robot_token_duration:
          description: The robot account token duration in days
          type: integer
          x-omitempty: true
          x-isnullable: true
        robot_name_prefix:
          description: The rebot account name prefix
          type: string
          x-omitempty: true
          x-isnullable: true
        notification_enable:
          description: Enable notification
          type: boolean
          x-omitempty: true
          x-isnullable: true
        quota_per_project_enable:
          description: Enable quota per project
          type: boolean
          x-omitempty: true
          x-isnullable: true
        storage_per_project:
          description: The storage quota per project
          type: integer
          x-omitempty: true
          x-isnullable: true
        audit_log_forward_endpoint:
          description: The audit log forward endpoint
          type: string
          x-omitempty: true
          x-isnullable: true
        skip_audit_log_database:
          description: Skip audit log database
          type: boolean
          x-omitempty: true
          x-isnullable: true
      type: object
      x-apifox-orders:
      - auth_mode
      - email_from
      - email_host
      - email_identity
      - email_insecure
      - email_password
      - email_port
      - email_ssl
      - email_username
      - ldap_base_dn
      - ldap_filter
      - ldap_group_base_dn
      - ldap_group_admin_dn
      - ldap_group_attribute_name
      - ldap_group_search_filter
      - ldap_group_search_scope
      - ldap_scope
      - ldap_search_dn
      - ldap_search_password
      - ldap_timeout
      - ldap_uid
      - ldap_url
      - ldap_verify_cert
      - ldap_group_membership_attribute
      - project_creation_restriction
      - read_only
      - self_registration
      - token_expiration
      - uaa_client_id
      - uaa_client_secret
      - uaa_endpoint
      - uaa_verify_cert
      - http_authproxy_endpoint
      - http_authproxy_tokenreview_endpoint
      - http_authproxy_admin_groups
      - http_authproxy_admin_usernames
      - http_authproxy_verify_cert
      - http_authproxy_skip_search
      - http_authproxy_server_certificate
      - oidc_name
      - oidc_endpoint
      - oidc_client_id
      - oidc_client_secret
      - oidc_groups_claim
      - oidc_admin_group
      - oidc_scope
      - oidc_user_claim
      - oidc_verify_cert
      - oidc_auto_onboard
      - oidc_extra_redirect_parms
      - robot_token_duration
      - robot_name_prefix
      - notification_enable
      - quota_per_project_enable
      - storage_per_project
      - audit_log_forward_endpoint
      - skip_audit_log_database
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ConfigurationsResponse:
      example:
        oidc_groups_claim:
          editable: true
          value: value
        email_ssl:
          editable: true
          value: true
        notification_enable:
          editable: true
          value: true
        ldap_timeout:
          editable: true
          value: 0
        ldap_filter:
          editable: true
          value: value
        ldap_group_admin_dn:
          editable: true
          value: value
        ldap_group_membership_attribute:
          editable: true
          value: value
        http_authproxy_verify_cert:
          editable: true
          value: true
        oidc_admin_group:
          editable: true
          value: value
        skip_audit_log_database:
          editable: true
          value: true
        email_insecure:
          editable: true
          value: true
        oidc_verify_cert:
          editable: true
          value: true
        read_only:
          editable: true
          value: true
        ldap_group_attribute_name:
          editable: true
          value: value
        ldap_url:
          editable: true
          value: value
        robot_name_prefix:
          editable: true
          value: value
        ldap_group_search_filter:
          editable: true
          value: value
        self_registration:
          editable: true
          value: true
        uaa_client_secret:
          editable: true
          value: value
        oidc_user_claim:
          editable: true
          value: value
        oidc_client_id:
          editable: true
          value: value
        oidc_endpoint:
          editable: true
          value: value
        scan_all_policy:
          parameter:
            daily_time: 6
          type: type
        email_identity:
          editable: true
          value: value
        ldap_search_dn:
          editable: true
          value: value
        http_authproxy_skip_search:
          editable: true
          value: true
        uaa_client_id:
          editable: true
          value: value
        http_authproxy_endpoint:
          editable: true
          value: value
        audit_log_forward_endpoint:
          editable: true
          value: value
        http_authproxy_admin_groups:
          editable: true
          value: value
        auth_mode:
          editable: true
          value: value
        ldap_verify_cert:
          editable: true
          value: true
        ldap_group_base_dn:
          editable: true
          value: value
        email_port:
          editable: true
          value: 0
        http_authproxy_tokenreview_endpoint:
          editable: true
          value: value
        oidc_extra_redirect_parms:
          editable: true
          value: value
        token_expiration:
          editable: true
          value: 0
        ldap_scope:
          editable: true
          value: 0
        http_authproxy_admin_usernames:
          editable: true
          value: value
        oidc_name:
          editable: true
          value: value
        uaa_endpoint:
          editable: true
          value: value
        email_username:
          editable: true
          value: value
        ldap_base_dn:
          editable: true
          value: value
        ldap_group_search_scope:
          editable: true
          value: 0
        oidc_scope:
          editable: true
          value: value
        project_creation_restriction:
          editable: true
          value: value
        storage_per_project:
          editable: true
          value: 0
        quota_per_project_enable:
          editable: true
          value: true
        oidc_auto_onboard:
          editable: true
          value: true
        ldap_uid:
          editable: true
          value: value
        http_authproxy_server_certificate:
          editable: true
          value: value
        robot_token_duration:
          editable: true
          value: 0
        uaa_verify_cert:
          editable: true
          value: true
        email_from:
          editable: true
          value: value
        email_host:
          editable: true
          value: value
      properties:
        auth_mode:
          $ref: '#/components/schemas/StringConfigItem'
        email_from:
          $ref: '#/components/schemas/StringConfigItem'
        email_host:
          $ref: '#/components/schemas/StringConfigItem'
        email_identity:
          $ref: '#/components/schemas/StringConfigItem'
        email_insecure:
          $ref: '#/components/schemas/BoolConfigItem'
        email_port:
          $ref: '#/components/schemas/IntegerConfigItem'
        email_ssl:
          $ref: '#/components/schemas/BoolConfigItem'
        email_username:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_base_dn:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_filter:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_group_base_dn:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_group_admin_dn:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_group_attribute_name:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_group_search_filter:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_group_search_scope:
          $ref: '#/components/schemas/IntegerConfigItem'
        ldap_scope:
          $ref: '#/components/schemas/IntegerConfigItem'
        ldap_search_dn:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_timeout:
          $ref: '#/components/schemas/IntegerConfigItem'
        ldap_uid:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_url:
          $ref: '#/components/schemas/StringConfigItem'
        ldap_verify_cert:
          $ref: '#/components/schemas/BoolConfigItem'
        ldap_group_membership_attribute:
          $ref: '#/components/schemas/StringConfigItem'
        project_creation_restriction:
          $ref: '#/components/schemas/StringConfigItem'
        read_only:
          $ref: '#/components/schemas/BoolConfigItem'
        self_registration:
          $ref: '#/components/schemas/BoolConfigItem'
        token_expiration:
          $ref: '#/components/schemas/IntegerConfigItem'
        uaa_client_id:
          $ref: '#/components/schemas/StringConfigItem'
        uaa_client_secret:
          $ref: '#/components/schemas/StringConfigItem'
        uaa_endpoint:
          $ref: '#/components/schemas/StringConfigItem'
        uaa_verify_cert:
          $ref: '#/components/schemas/BoolConfigItem'
        http_authproxy_endpoint:
          $ref: '#/components/schemas/StringConfigItem'
        http_authproxy_tokenreview_endpoint:
          $ref: '#/components/schemas/StringConfigItem'
        http_authproxy_admin_groups:
          $ref: '#/components/schemas/StringConfigItem'
        http_authproxy_admin_usernames:
          $ref: '#/components/schemas/StringConfigItem'
        http_authproxy_verify_cert:
          $ref: '#/components/schemas/BoolConfigItem'
        http_authproxy_skip_search:
          $ref: '#/components/schemas/BoolConfigItem'
        http_authproxy_server_certificate:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_name:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_endpoint:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_client_id:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_groups_claim:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_admin_group:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_scope:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_user_claim:
          $ref: '#/components/schemas/StringConfigItem'
        oidc_verify_cert:
          $ref: '#/components/schemas/BoolConfigItem'
        oidc_auto_onboard:
          $ref: '#/components/schemas/BoolConfigItem'
        oidc_extra_redirect_parms:
          $ref: '#/components/schemas/StringConfigItem'
        robot_token_duration:
          $ref: '#/components/schemas/IntegerConfigItem'
        robot_name_prefix:
          $ref: '#/components/schemas/StringConfigItem'
        notification_enable:
          $ref: '#/components/schemas/BoolConfigItem'
        quota_per_project_enable:
          $ref: '#/components/schemas/BoolConfigItem'
        storage_per_project:
          $ref: '#/components/schemas/IntegerConfigItem'
        audit_log_forward_endpoint:
          $ref: '#/components/schemas/StringConfigItem'
        skip_audit_log_database:
          $ref: '#/components/schemas/BoolConfigItem'
        scan_all_policy:
          $ref: '#/components/schemas/ConfigurationsResponse_scan_all_policy'
      type: object
      x-apifox-orders:
      - auth_mode
      - email_from
      - email_host
      - email_identity
      - email_insecure
      - email_port
      - email_ssl
      - email_username
      - ldap_base_dn
      - ldap_filter
      - ldap_group_base_dn
      - ldap_group_admin_dn
      - ldap_group_attribute_name
      - ldap_group_search_filter
      - ldap_group_search_scope
      - ldap_scope
      - ldap_search_dn
      - ldap_timeout
      - ldap_uid
      - ldap_url
      - ldap_verify_cert
      - ldap_group_membership_attribute
      - project_creation_restriction
      - read_only
      - self_registration
      - token_expiration
      - uaa_client_id
      - uaa_client_secret
      - uaa_endpoint
      - uaa_verify_cert
      - http_authproxy_endpoint
      - http_authproxy_tokenreview_endpoint
      - http_authproxy_admin_groups
      - http_authproxy_admin_usernames
      - http_authproxy_verify_cert
      - http_authproxy_skip_search
      - http_authproxy_server_certificate
      - oidc_name
      - oidc_endpoint
      - oidc_client_id
      - oidc_groups_claim
      - oidc_admin_group
      - oidc_scope
      - oidc_user_claim
      - oidc_verify_cert
      - oidc_auto_onboard
      - oidc_extra_redirect_parms
      - robot_token_duration
      - robot_name_prefix
      - notification_enable
      - quota_per_project_enable
      - storage_per_project
      - audit_log_forward_endpoint
      - skip_audit_log_database
      - scan_all_policy
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InternalConfigurationValue:
      properties:
        value:
          description: The value of current config item
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        editable:
          description: The configure item can be updated or not
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - value
      - editable
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InternalConfigurationsResponse:
      additionalProperties:
        $ref: '#/components/schemas/InternalConfigurationValue'
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WebhookJob:
      description: The webhook job.
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        notify_type: notify_type
        job_detail: job_detail
        update_time: 2000-01-23T04:56:07.000+00:00
        event_type: event_type
        policy_id: 6
        id: 0
        status: status
      properties:
        id:
          description: The webhook job ID.
          format: int64
          type: integer
        policy_id:
          description: The webhook policy ID.
          format: int64
          type: integer
        event_type:
          description: The webhook job event type.
          type: string
        notify_type:
          description: The webhook job notify type.
          type: string
        status:
          description: The webhook job status.
          type: string
        job_detail:
          description: The webhook job notify detailed data.
          type: string
        creation_time:
          description: The webhook job creation time.
          format: date-time
          type: string
        update_time:
          description: The webhook job update time.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - policy_id
      - event_type
      - notify_type
      - status
      - job_detail
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WebhookLastTrigger:
      description: The webhook policy and last trigger time group by event type.
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        event_type: event_type
        policy_name: policy_name
        last_trigger_time: 2000-01-23T04:56:07.000+00:00
        enabled: true
      properties:
        policy_name:
          description: The webhook policy name.
          type: string
        event_type:
          description: The webhook event type.
          type: string
        enabled:
          description: Whether or not the webhook policy enabled.
          type: boolean
        creation_time:
          description: The creation time of webhook policy.
          format: date-time
          type: string
        last_trigger_time:
          description: The last trigger time of webhook policy.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - policy_name
      - event_type
      - enabled
      - creation_time
      - last_trigger_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WebhookPolicy:
      description: The webhook policy object
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        creator: creator
        update_time: 2000-01-23T04:56:07.000+00:00
        event_types:
        - event_types
        - event_types
        project_id: 6
        name: name
        description: description
        id: 0
        targets:
        - address: address
          skip_cert_verify: true
          type: type
          auth_header: auth_header
        - address: address
          skip_cert_verify: true
          type: type
          auth_header: auth_header
        enabled: true
      properties:
        id:
          description: The webhook policy ID.
          format: int64
          type: integer
        name:
          description: The name of webhook policy.
          type: string
        description:
          description: The description of webhook policy.
          type: string
        project_id:
          description: The project ID of webhook policy.
          type: integer
        targets:
          items:
            $ref: '#/components/schemas/WebhookTargetObject'
          type: array
        event_types:
          items:
            type: string
          type: array
        creator:
          description: The creator of the webhook policy.
          type: string
        creation_time:
          description: The create time of the webhook policy.
          format: date-time
          type: string
        update_time:
          description: The update time of the webhook policy.
          format: date-time
          type: string
        enabled:
          description: Whether the webhook policy is enabled or not.
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - project_id
      - targets
      - event_types
      - creator
      - creation_time
      - update_time
      - enabled
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WebhookTargetObject:
      description: The webhook policy target object.
      example:
        address: address
        skip_cert_verify: true
        type: type
        auth_header: auth_header
      properties:
        type:
          description: The webhook target notify type.
          type: string
        address:
          description: The webhook target address.
          type: string
        auth_header:
          description: The webhook auth header.
          type: string
        skip_cert_verify:
          description: Whether or not to skip cert verify.
          type: boolean
      type: object
      x-apifox-orders:
      - type
      - address
      - auth_header
      - skip_cert_verify
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NotifyType:
      description: Webhook supportted notify type.
      example: http
      type: string
      x-apifox-folder: Schemas
    EventType:
      description: Webhook supportted event type.
      example: pullImage
      type: string
      x-apifox-folder: Schemas
    SupportedWebhookEventTypes:
      description: Supportted webhook event types and notify types.
      example:
        notify_type:
        - http
        - http
        event_type:
        - pullImage
        - pullImage
      properties:
        event_type:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
        notify_type:
          items:
            $ref: '#/components/schemas/NotifyType'
          type: array
      type: object
      x-apifox-orders:
      - event_type
      - notify_type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserGroupSearchItem:
      example:
        group_name: group_name
        id: 0
        group_type: 6
      properties:
        id:
          description: The ID of the user group
          type: integer
        group_name:
          description: The name of the user group
          type: string
        group_type:
          description: The group type, 1 for LDAP group, 2 for HTTP group, 3 for OIDC
            group.
          type: integer
      type: object
      x-apifox-orders:
      - id
      - group_name
      - group_type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserGroup:
      example:
        group_name: group_name
        ldap_group_dn: ldap_group_dn
        id: 0
        group_type: 6
      properties:
        id:
          description: The ID of the user group
          type: integer
        group_name:
          description: The name of the user group
          type: string
        group_type:
          description: The group type, 1 for LDAP group, 2 for HTTP group, 3 for OIDC
            group.
          type: integer
        ldap_group_dn:
          description: The DN of the LDAP group if group type is 1 (LDAP group).
          type: string
      type: object
      x-apifox-orders:
      - id
      - group_name
      - group_type
      - ldap_group_dn
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LdapUser:
      example:
        email: email
        username: username
        realname: realname
      properties:
        username:
          description: ldap username.
          type: string
        realname:
          description: The user realname from "uid" or "cn" attribute.
          type: string
        email:
          description: The user email address from "mail" or "email" attribute.
          type: string
      type: object
      x-apifox-orders:
      - username
      - realname
      - email
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LdapFailedImportUser:
      properties:
        uid:
          description: the uid can't add to system.
          type: string
        error:
          description: fail reason.
          type: string
      type: object
      x-apifox-orders:
      - uid
      - error
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LdapImportUsers:
      example:
        ldap_uid_list:
        - ldap_uid_list
        - ldap_uid_list
      properties:
        ldap_uid_list:
          description: selected uid list
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - ldap_uid_list
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LdapPingResult:
      description: The ldap ping result
      example:
        success: true
        message: message
      properties:
        success:
          description: Test success
          type: boolean
        message:
          description: The ping operation output message.
          type: string
      type: object
      x-apifox-orders:
      - success
      - message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LdapConf:
      description: The ldap configure properties
      example:
        ldap_search_dn: ldap_search_dn
        ldap_uid: ldap_uid
        ldap_filter: ldap_filter
        ldap_base_dn: ldap_base_dn
        ldap_url: ldap_url
        ldap_search_password: ldap_search_password
        ldap_connection_timeout: 6
        ldap_verify_cert: true
        ldap_scope: 0
      properties:
        ldap_url:
          description: The url of ldap service.
          type: string
        ldap_search_dn:
          description: The search dn of ldap service.
          type: string
        ldap_search_password:
          description: The search password of ldap service.
          type: string
        ldap_base_dn:
          description: The base dn of ldap service.
          type: string
        ldap_filter:
          description: The serach filter of ldap service.
          type: string
        ldap_uid:
          description: The serach uid from ldap service attributes.
          type: string
        ldap_scope:
          description: The serach scope of ldap service.
          format: int64
          type: integer
        ldap_connection_timeout:
          description: The connect timeout of ldap service(second).
          format: int64
          type: integer
        ldap_verify_cert:
          description: Verify Ldap server certificate.
          type: boolean
      type: object
      x-apifox-orders:
      - ldap_url
      - ldap_search_dn
      - ldap_search_password
      - ldap_base_dn
      - ldap_filter
      - ldap_uid
      - ldap_scope
      - ldap_connection_timeout
      - ldap_verify_cert
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ImmutableSelector:
      example:
        kind: kind
        pattern: pattern
        extras: extras
        decoration: decoration
      properties:
        kind:
          type: string
        decoration:
          type: string
        pattern:
          type: string
        extras:
          type: string
      type: object
      x-apifox-orders:
      - kind
      - decoration
      - pattern
      - extras
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ImmutableRule:
      example:
        template: template
        tag_selectors:
        - kind: kind
          pattern: pattern
          extras: extras
          decoration: decoration
        - kind: kind
          pattern: pattern
          extras: extras
          decoration: decoration
        scope_selectors:
          key:
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
        action: action
        disabled: true
        id: 0
        priority: 6
        params:
          key: '{}'
      properties:
        id:
          type: integer
        priority:
          type: integer
        disabled:
          type: boolean
        action:
          type: string
        template:
          type: string
        params:
          additionalProperties:
            type: object
            x-apifox-orders: []
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        tag_selectors:
          items:
            $ref: '#/components/schemas/ImmutableSelector'
          type: array
        scope_selectors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ImmutableSelector'
            type: array
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - id
      - priority
      - disabled
      - action
      - template
      - params
      - tag_selectors
      - scope_selectors
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScannerAdapterMetadata:
      description: The metadata info of the scanner adapter
      example:
        capabilities:
        - consumes_mime_types:
          - application/vnd.docker.distribution.manifest.v2+json
          - application/vnd.docker.distribution.manifest.v2+json
          produces_mime_types:
          - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
          - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
        - consumes_mime_types:
          - application/vnd.docker.distribution.manifest.v2+json
          - application/vnd.docker.distribution.manifest.v2+json
          produces_mime_types:
          - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
          - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
        scanner:
          vendor: Aqua Security
          name: Trivy
          version: v0.9.1
        properties:
          harbor.scanner-adapter/registry-authorization-type: Bearer
      properties:
        scanner:
          $ref: '#/components/schemas/Scanner'
        capabilities:
          items:
            $ref: '#/components/schemas/ScannerCapability'
          type: array
        properties:
          additionalProperties:
            type: string
          example:
            harbor.scanner-adapter/registry-authorization-type: Bearer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - scanner
      - capabilities
      - properties
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScannerCapability:
      example:
        consumes_mime_types:
        - application/vnd.docker.distribution.manifest.v2+json
        - application/vnd.docker.distribution.manifest.v2+json
        produces_mime_types:
        - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
        - application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
      properties:
        consumes_mime_types:
          items:
            example: application/vnd.docker.distribution.manifest.v2+json
            type: string
          type: array
        produces_mime_types:
          items:
            example: application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
            type: string
          type: array
      type: object
      x-apifox-orders:
      - consumes_mime_types
      - produces_mime_types
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    IsDefault:
      example:
        is_default: true
      properties:
        is_default:
          description: A flag indicating whether a scanner registration is default.
          type: boolean
      type: object
      x-apifox-orders:
      - is_default
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScannerRegistrationSettings:
      example:
        auth: auth
        name: Trivy
        url: http://harbor-scanner-trivy:8080
        access_credential: 'Bearer: JWTTOKENGOESHERE'
      properties:
        name:
          description: The name of this registration
          example: Trivy
          type: string
        url:
          description: A base URL of the scanner adapter.
          example: http://harbor-scanner-trivy:8080
          format: uri
          type: string
        auth:
          default: ""
          description: |
            Specify what authentication approach is adopted for the HTTP communications.
            Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"
          type: string
        access_credential:
          description: |
            An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
          example: 'Bearer: JWTTOKENGOESHERE'
          type: string
      required:
      - name
      - url
      type: object
      x-apifox-orders:
      - name
      - url
      - auth
      - access_credential
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScannerRegistrationReq:
      example:
        skip_certVerify: false
        auth: Bearer
        name: Trivy
        description: |
          A free-to-use tool that scans container images for package vulnerabilities.
        disabled: false
        use_internal_addr: false
        url: http://harbor-scanner-trivy:8080
        access_credential: 'Bearer: JWTTOKENGOESHERE'
      properties:
        name:
          description: The name of this registration
          example: Trivy
          type: string
        description:
          description: An optional description of this registration.
          example: |
            A free-to-use tool that scans container images for package vulnerabilities.
          type: string
        url:
          description: A base URL of the scanner adapter.
          example: http://harbor-scanner-trivy:8080
          format: uri
          type: string
        auth:
          description: |
            Specify what authentication approach is adopted for the HTTP communications.
            Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"
          example: Bearer
          type: string
        access_credential:
          description: |
            An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
          example: 'Bearer: JWTTOKENGOESHERE'
          type: string
        skip_certVerify:
          default: false
          description: Indicate if skip the certificate verification when sending
            HTTP requests
          type: boolean
        use_internal_addr:
          default: false
          description: Indicate whether use internal registry addr for the scanner
            to pull content or not
          type: boolean
        disabled:
          default: false
          description: Indicate whether the registration is enabled or not
          type: boolean
      required:
      - name
      - url
      type: object
      x-apifox-orders:
      - name
      - description
      - url
      - auth
      - access_credential
      - skip_certVerify
      - use_internal_addr
      - disabled
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScannerRegistration:
      description: |
        Registration represents a named configuration for invoking a scanner via its adapter.
      example:
        skip_certVerify: false
        adapter: Trivy
        create_time: 2000-01-23T04:56:07.000+00:00
        auth: Bearer
        description: |
          A free-to-use tool that scans container images for package vulnerabilities.
        health: healthy
        is_default: false
        uuid: uuid
        version: 1.0.1
        url: http://harbor-scanner-trivy:8080
        update_time: 2000-01-23T04:56:07.000+00:00
        vendor: CentOS
        name: Trivy
        disabled: false
        use_internal_addr: false
        access_credential: 'Bearer: JWTTOKENGOESHERE'
      properties:
        uuid:
          description: The unique identifier of this registration.
          type: string
        name:
          description: The name of this registration.
          example: Trivy
          type: string
        description:
          description: An optional description of this registration.
          example: |
            A free-to-use tool that scans container images for package vulnerabilities.
          type: string
          x-omitempty: false
        url:
          description: A base URL of the scanner adapter
          example: http://harbor-scanner-trivy:8080
          format: url
          type: string
        disabled:
          default: false
          description: Indicate whether the registration is enabled or not
          type: boolean
          x-omitempty: false
        is_default:
          default: false
          description: Indicate if the registration is set as the system default one
          type: boolean
          x-omitempty: false
        auth:
          default: ""
          description: |
            Specify what authentication approach is adopted for the HTTP communications.
            Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"
          example: Bearer
          type: string
          x-omitempty: false
        access_credential:
          description: |
            An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
          example: 'Bearer: JWTTOKENGOESHERE'
          type: string
          x-omitempty: false
        skip_certVerify:
          default: false
          description: Indicate if skip the certificate verification when sending
            HTTP requests
          type: boolean
          x-omitempty: false
        use_internal_addr:
          default: false
          description: Indicate whether use internal registry addr for the scanner
            to pull content or not
          type: boolean
          x-omitempty: false
        create_time:
          description: The creation time of this registration
          format: date-time
          type: string
        update_time:
          description: The update time of this registration
          format: date-time
          type: string
        adapter:
          description: Optional property to describe the name of the scanner registration
          example: Trivy
          type: string
        vendor:
          description: Optional property to describe the vendor of the scanner registration
          example: CentOS
          type: string
        version:
          description: Optional property to describe the version of the scanner registration
          example: 1.0.1
          type: string
        health:
          default: ""
          description: Indicate the healthy of the registration
          example: healthy
          type: string
      type: object
      x-apifox-orders:
      - uuid
      - name
      - description
      - url
      - disabled
      - is_default
      - auth
      - access_credential
      - skip_certVerify
      - use_internal_addr
      - create_time
      - update_time
      - adapter
      - vendor
      - version
      - health
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Quota:
      description: The quota object
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        ref:
          key: ref
        update_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        hard:
          key: 6
        used:
          key: 1
      properties:
        id:
          description: ID of the quota
          type: integer
        ref:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        hard:
          additionalProperties:
            format: int64
            type: integer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        used:
          additionalProperties:
            format: int64
            type: integer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        creation_time:
          description: the creation time of the quota
          format: date-time
          type: string
        update_time:
          description: the update time of the quota
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - ref
      - hard
      - used
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    QuotaRefObject:
      additionalProperties:
        type: string
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    QuotaUpdateReq:
      example:
        hard:
          key: 0
      properties:
        hard:
          additionalProperties:
            format: int64
            type: integer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
      type: object
      x-apifox-orders:
      - hard
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionExecutionTask:
      example:
        execution_id: 6
        start_time: start_time
        retained: 2
        total: 5
        status_code: 1
        job_id: job_id
        end_time: end_time
        status_revision: 5
        id: 0
        repository: repository
        status: status
      properties:
        id:
          format: int64
          type: integer
        execution_id:
          format: int64
          type: integer
        repository:
          type: string
        job_id:
          type: string
        status:
          type: string
        status_code:
          type: integer
          x-omitempty: false
        status_revision:
          format: int64
          type: integer
        start_time:
          type: string
        end_time:
          type: string
        total:
          type: integer
          x-omitempty: false
        retained:
          type: integer
          x-omitempty: false
      type: object
      x-apifox-orders:
      - id
      - execution_id
      - repository
      - job_id
      - status
      - status_code
      - status_revision
      - start_time
      - end_time
      - total
      - retained
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionExecution:
      example:
        start_time: start_time
        policy_id: 6
        end_time: end_time
        dry_run: true
        id: 0
        trigger: trigger
        status: status
      properties:
        id:
          format: int64
          type: integer
        policy_id:
          format: int64
          type: integer
        start_time:
          type: string
        end_time:
          type: string
        status:
          type: string
        trigger:
          type: string
        dry_run:
          type: boolean
      type: object
      x-apifox-orders:
      - id
      - policy_id
      - start_time
      - end_time
      - status
      - trigger
      - dry_run
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionSelector:
      example:
        kind: kind
        pattern: pattern
        extras: extras
        decoration: decoration
      properties:
        kind:
          type: string
        decoration:
          type: string
        pattern:
          type: string
        extras:
          type: string
      type: object
      x-apifox-orders:
      - kind
      - decoration
      - pattern
      - extras
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionRule:
      example:
        template: template
        tag_selectors:
        - kind: kind
          pattern: pattern
          extras: extras
          decoration: decoration
        - kind: kind
          pattern: pattern
          extras: extras
          decoration: decoration
        scope_selectors:
          key:
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
        action: action
        disabled: true
        id: 6
        priority: 1
        params:
          key: '{}'
      properties:
        id:
          type: integer
        priority:
          type: integer
        disabled:
          type: boolean
        action:
          type: string
        template:
          type: string
        params:
          additionalProperties:
            type: object
            x-apifox-orders: []
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        tag_selectors:
          items:
            $ref: '#/components/schemas/RetentionSelector'
          type: array
        scope_selectors:
          additionalProperties:
            items:
              $ref: '#/components/schemas/RetentionSelector'
            type: array
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - id
      - priority
      - disabled
      - action
      - template
      - params
      - tag_selectors
      - scope_selectors
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionPolicyScope:
      example:
        ref: 5
        level: level
      properties:
        level:
          type: string
        ref:
          type: integer
      type: object
      x-apifox-orders:
      - level
      - ref
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionRuleTrigger:
      example:
        settings: '{}'
        references: '{}'
        kind: kind
      properties:
        kind:
          type: string
        settings:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        references:
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - kind
      - settings
      - references
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionPolicy:
      description: retention policy
      example:
        scope:
          ref: 5
          level: level
        rules:
        - template: template
          tag_selectors:
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          scope_selectors:
            key:
            - kind: kind
              pattern: pattern
              extras: extras
              decoration: decoration
            - kind: kind
              pattern: pattern
              extras: extras
              decoration: decoration
          action: action
          disabled: true
          id: 6
          priority: 1
          params:
            key: '{}'
        - template: template
          tag_selectors:
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          - kind: kind
            pattern: pattern
            extras: extras
            decoration: decoration
          scope_selectors:
            key:
            - kind: kind
              pattern: pattern
              extras: extras
              decoration: decoration
            - kind: kind
              pattern: pattern
              extras: extras
              decoration: decoration
          action: action
          disabled: true
          id: 6
          priority: 1
          params:
            key: '{}'
        id: 0
        trigger:
          settings: '{}'
          references: '{}'
          kind: kind
        algorithm: algorithm
      properties:
        id:
          format: int64
          type: integer
        algorithm:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/RetentionRule'
          type: array
        trigger:
          $ref: '#/components/schemas/RetentionRuleTrigger'
        scope:
          $ref: '#/components/schemas/RetentionPolicyScope'
      type: object
      x-apifox-orders:
      - id
      - algorithm
      - rules
      - trigger
      - scope
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionSelectorMetadata:
      description: retention selector
      example:
        kind: kind
        decorations:
        - decorations
        - decorations
        display_text: display_text
      properties:
        display_text:
          type: string
        kind:
          type: string
        decorations:
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - display_text
      - kind
      - decorations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionRuleParamMetadata:
      description: rule param
      example:
        unit: unit
        type: type
        required: true
      properties:
        type:
          type: string
        unit:
          type: string
        required:
          type: boolean
      type: object
      x-apifox-orders:
      - type
      - unit
      - required
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionRuleMetadata:
      description: the tag retention rule metadata
      example:
        rule_template: rule_template
        action: action
        params:
        - unit: unit
          type: type
          required: true
        - unit: unit
          type: type
          required: true
        display_text: display_text
      properties:
        rule_template:
          description: rule id
          type: string
        display_text:
          description: rule display text
          type: string
        action:
          description: rule action
          type: string
        params:
          description: rule params
          items:
            $ref: '#/components/schemas/RetentionRuleParamMetadata'
          type: array
      type: object
      x-apifox-orders:
      - rule_template
      - display_text
      - action
      - params
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RetentionMetadata:
      description: the tag retention metadata
      example:
        tag_selectors:
        - kind: kind
          decorations:
          - decorations
          - decorations
          display_text: display_text
        - kind: kind
          decorations:
          - decorations
          - decorations
          display_text: display_text
        templates:
        - rule_template: rule_template
          action: action
          params:
          - unit: unit
            type: type
            required: true
          - unit: unit
            type: type
            required: true
          display_text: display_text
        - rule_template: rule_template
          action: action
          params:
          - unit: unit
            type: type
            required: true
          - unit: unit
            type: type
            required: true
          display_text: display_text
        scope_selectors:
        - kind: kind
          decorations:
          - decorations
          - decorations
          display_text: display_text
        - kind: kind
          decorations:
          - decorations
          - decorations
          display_text: display_text
      properties:
        templates:
          description: templates
          items:
            $ref: '#/components/schemas/RetentionRuleMetadata'
          type: array
        scope_selectors:
          description: supported scope selectors
          items:
            $ref: '#/components/schemas/RetentionSelectorMetadata'
          type: array
        tag_selectors:
          description: supported tag selectors
          items:
            $ref: '#/components/schemas/RetentionSelectorMetadata'
          type: array
      type: object
      x-apifox-orders:
      - templates
      - scope_selectors
      - tag_selectors
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Stats:
      description: Stats provides the overall progress of the scan all process.
      example:
        total: 100
        ongoing: true
        completed: 90
        metrics:
          Success: 5
          Error: 2
          Running: 3
        trigger: Manual
      properties:
        total:
          description: The total number of scan processes triggered by the scan all
            action
          example: 100
          format: int
          type: integer
          x-omitempty: false
        completed:
          description: The number of the finished scan processes triggered by the
            scan all action
          example: 90
          format: int
          type: integer
          x-omitempty: false
        metrics:
          additionalProperties:
            example: 10
            format: int
            type: integer
          description: The metrics data for the each status
          example:
            Success: 5
            Error: 2
            Running: 3
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        ongoing:
          description: A flag indicating job status of scan all.
          type: boolean
          x-omitempty: false
        trigger:
          description: The trigger of the scan all job.
          enum:
          - Manual
          - Schedule
          - Event
          type: string
      type: object
      x-apifox-orders:
      - total
      - completed
      - metrics
      - ongoing
      - trigger
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScheduleObj:
      example:
        cron: cron
        next_scheduled_time: 2000-01-23T04:56:07.000+00:00
        type: Hourly
      properties:
        type:
          description: |
            The schedule type. The valid values are 'Hourly', 'Daily', 'Weekly', 'Custom', 'Manual' and 'None'.
            'Manual' means to trigger it right away and 'None' means to cancel the schedule.
          enum:
          - Hourly
          - Daily
          - Weekly
          - Custom
          - Manual
          - None
          type: string
        cron:
          description: A cron expression, a time-based job scheduler.
          type: string
        next_scheduled_time:
          description: The next time to schedule to run the job.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - type
      - cron
      - next_scheduled_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Schedule:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        schedule:
          cron: cron
          next_scheduled_time: 2000-01-23T04:56:07.000+00:00
          type: Hourly
        update_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        parameters:
          key: '{}'
        status: status
      properties:
        id:
          description: The id of the schedule.
          readOnly: true
          type: integer
        status:
          description: The status of the schedule.
          readOnly: true
          type: string
        creation_time:
          description: the creation time of the schedule.
          format: date-time
          readOnly: true
          type: string
        update_time:
          description: the update time of the schedule.
          format: date-time
          readOnly: true
          type: string
        schedule:
          $ref: '#/components/schemas/ScheduleObj'
        parameters:
          additionalProperties:
            type: object
            x-apifox-orders: []
          description: The parameters of schedule job
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - id
      - status
      - creation_time
      - update_time
      - schedule
      - parameters
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExecHistory:
      example:
        job_parameters: job_parameters
        creation_time: 2000-01-23T04:56:07.000+00:00
        schedule:
          cron: cron
          next_scheduled_time: 2000-01-23T04:56:07.000+00:00
          type: Hourly
        job_status: job_status
        update_time: 2000-01-23T04:56:07.000+00:00
        deleted: true
        job_name: job_name
        id: 0
        job_kind: job_kind
      properties:
        id:
          description: the id of purge job.
          type: integer
        job_name:
          description: the job name of purge job.
          type: string
        job_kind:
          description: the job kind of purge job.
          type: string
        job_parameters:
          description: the job parameters of purge job.
          type: string
        schedule:
          $ref: '#/components/schemas/ScheduleObj'
        job_status:
          description: the status of purge job.
          type: string
        deleted:
          description: if purge job was deleted.
          type: boolean
        creation_time:
          description: the creation time of purge job.
          format: date-time
          type: string
        update_time:
          description: the update time of purge job.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - job_name
      - job_kind
      - job_parameters
      - schedule
      - job_status
      - deleted
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GcHistory:
      example:
        job_parameters: job_parameters
        creation_time: 2000-01-23T04:56:07.000+00:00
        schedule:
          cron: cron
          next_scheduled_time: 2000-01-23T04:56:07.000+00:00
          type: Hourly
        job_status: job_status
        update_time: 2000-01-23T04:56:07.000+00:00
        deleted: true
        job_name: job_name
        id: 0
        job_kind: job_kind
      properties:
        id:
          description: the id of gc job.
          type: integer
        job_name:
          description: the job name of gc job.
          type: string
        job_kind:
          description: the job kind of gc job.
          type: string
        job_parameters:
          description: the job parameters of gc job.
          type: string
        schedule:
          $ref: '#/components/schemas/ScheduleObj'
        job_status:
          description: the status of gc job.
          type: string
        deleted:
          description: if gc job was deleted.
          type: boolean
        creation_time:
          description: the creation time of gc job.
          format: date-time
          type: string
        update_time:
          description: the update time of gc job.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - job_name
      - job_kind
      - job_parameters
      - schedule
      - job_status
      - deleted
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SystemInfo:
      example:
        storage:
        - total: 0
          free: 6
        - total: 0
          free: 6
      properties:
        storage:
          description: The storage of system.
          items:
            $ref: '#/components/schemas/Storage'
          type: array
      type: object
      x-apifox-orders:
      - storage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AuthproxySetting:
      example:
        server_certificate: server_certificate
        endpoint: endpoint
        verify_cert: true
        skip_search: true
        tokenreivew_endpoint: tokenreivew_endpoint
      properties:
        endpoint:
          description: The fully qualified URI of login endpoint of authproxy, such
            as 'https://192.168.1.2:8443/login'
          type: string
        tokenreivew_endpoint:
          description: The fully qualified URI of token review endpoint of authproxy,
            such as 'https://192.168.1.2:8443/tokenreview'
          type: string
        skip_search:
          description: The flag to determine whether Harbor can skip search the user/group
            when adding him as a member.
          type: boolean
        verify_cert:
          description: The flag to determine whether Harbor should verify the certificate
            when connecting to the auth proxy.
          type: boolean
        server_certificate:
          description: The certificate to be pinned when connecting auth proxy.
          type: string
      type: object
      x-apifox-orders:
      - endpoint
      - tokenreivew_endpoint
      - skip_search
      - verify_cert
      - server_certificate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GeneralInfo:
      example:
        registry_url: registry_url
        self_registration: true
        notification_enable: true
        authproxy_settings:
          server_certificate: server_certificate
          endpoint: endpoint
          verify_cert: true
          skip_search: true
          tokenreivew_endpoint: tokenreivew_endpoint
        auth_mode: auth_mode
        with_notary: true
        project_creation_restriction: project_creation_restriction
        registry_storage_provider_name: registry_storage_provider_name
        with_chartmuseum: true
        external_url: external_url
        read_only: true
        has_ca_root: true
        harbor_version: harbor_version
        current_time: 2000-01-23T04:56:07.000+00:00
      properties:
        current_time:
          description: The current time of the server.
          format: date-time
          nullable: true
          type: string
          x-omitempty: true
        with_notary:
          description: If the Harbor instance is deployed with nested notary.
          nullable: true
          type: boolean
          x-omitempty: true
        with_chartmuseum:
          description: If the Harbor instance is deployed with nested chartmuseum.
          nullable: true
          type: boolean
          x-omitempty: true
        registry_url:
          description: The url of registry against which the docker command should
            be issued.
          nullable: true
          type: string
          x-omitempty: true
        external_url:
          description: The external URL of Harbor, with protocol.
          nullable: true
          type: string
          x-omitempty: true
        auth_mode:
          description: The auth mode of current Harbor instance.
          nullable: true
          type: string
          x-omitempty: true
        project_creation_restriction:
          description: Indicate who can create projects, it could be 'adminonly' or
            'everyone'.
          nullable: true
          type: string
          x-omitempty: true
        self_registration:
          description: Indicate whether the Harbor instance enable user to register
            himself.
          nullable: true
          type: boolean
          x-omitempty: true
        has_ca_root:
          description: Indicate whether there is a ca root cert file ready for download
            in the file system.
          nullable: true
          type: boolean
          x-omitempty: true
        harbor_version:
          description: The build version of Harbor.
          nullable: true
          type: string
          x-omitempty: true
        registry_storage_provider_name:
          description: The storage provider's name of Harbor registry
          nullable: true
          type: string
          x-omitempty: true
        read_only:
          description: The flag to indicate whether Harbor is in readonly mode.
          nullable: true
          type: boolean
          x-omitempty: true
        notification_enable:
          description: The flag to indicate whether notification mechanism is enabled
            on Harbor instance.
          nullable: true
          type: boolean
          x-omitempty: true
        authproxy_settings:
          $ref: '#/components/schemas/AuthproxySetting'
      type: object
      x-apifox-orders:
      - current_time
      - with_notary
      - with_chartmuseum
      - registry_url
      - external_url
      - auth_mode
      - project_creation_restriction
      - self_registration
      - has_ca_root
      - harbor_version
      - registry_storage_provider_name
      - read_only
      - notification_enable
      - authproxy_settings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Storage:
      example:
        total: 0
        free: 6
      properties:
        total:
          description: Total volume size.
          format: uint64
          type: integer
        free:
          description: Free volume size.
          format: uint64
          type: integer
      type: object
      x-apifox-orders:
      - total
      - free
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RobotCreateV1:
      example:
        expires_at: 0
        access:
        - resource: resource
          effect: effect
          action: action
        - resource: resource
          effect: effect
          action: action
        name: name
        description: description
      properties:
        name:
          description: The name of robot account
          type: string
        description:
          description: The description of robot account
          type: string
        expires_at:
          description: The expiration time on or after which the JWT MUST NOT be accepted
            for processing.
          type: integer
        access:
          description: The permission of robot account
          items:
            $ref: '#/components/schemas/Access'
          type: array
      type: object
      x-apifox-orders:
      - name
      - description
      - expires_at
      - access
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Access:
      example:
        resource: resource
        effect: effect
        action: action
      properties:
        resource:
          description: The resource of the access
          type: string
        action:
          description: The action of the access
          type: string
        effect:
          description: The effect of the access
          type: string
      type: object
      x-apifox-orders:
      - resource
      - action
      - effect
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RobotPermission:
      example:
        access:
        - resource: resource
          effect: effect
          action: action
        - resource: resource
          effect: effect
          action: action
        kind: kind
        namespace: namespace
      properties:
        kind:
          description: The kind of the permission
          type: string
        namespace:
          description: The namespace of the permission
          type: string
        access:
          items:
            $ref: '#/components/schemas/Access'
          type: array
      type: object
      x-apifox-orders:
      - kind
      - namespace
      - access
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RobotSec:
      description: The response for refresh/update robot account secret.
      example:
        secret: secret
      properties:
        secret:
          description: The secret of the robot
          type: string
      type: object
      x-apifox-orders:
      - secret
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RobotCreated:
      description: The response for robot account creation.
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        expires_at: 6
        name: name
        id: 0
        secret: secret
      properties:
        id:
          description: The ID of the robot
          format: int64
          type: integer
        name:
          description: The name of the tag
          type: string
        secret:
          description: The secret of the robot
          type: string
        creation_time:
          description: The creation time of the robot.
          format: date-time
          type: string
        expires_at:
          description: The expiration data of the robot
          format: int64
          type: integer
      type: object
      x-apifox-orders:
      - id
      - name
      - secret
      - creation_time
      - expires_at
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RobotCreate:
      description: The request for robot account creation.
      example:
        duration: 0
        level: level
        disable: true
        permissions:
        - access:
          - resource: resource
            effect: effect
            action: action
          - resource: resource
            effect: effect
            action: action
          kind: kind
          namespace: namespace
        - access:
          - resource: resource
            effect: effect
            action: action
          - resource: resource
            effect: effect
            action: action
          kind: kind
          namespace: namespace
        name: name
        description: description
        secret: secret
      properties:
        name:
          description: The name of the tag
          type: string
        description:
          description: The description of the robot
          type: string
        secret:
          description: The secret of the robot
          type: string
        level:
          description: The level of the robot, project or system
          type: string
        disable:
          description: The disable status of the robot
          type: boolean
        duration:
          description: The duration of the robot in days
          format: int64
          type: integer
        permissions:
          items:
            $ref: '#/components/schemas/RobotPermission'
          type: array
      type: object
      x-apifox-orders:
      - name
      - description
      - secret
      - level
      - disable
      - duration
      - permissions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Robot:
      example:
        duration: 6
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        expires_at: 1
        level: level
        editable: true
        disable: true
        permissions:
        - access:
          - resource: resource
            effect: effect
            action: action
          - resource: resource
            effect: effect
            action: action
          kind: kind
          namespace: namespace
        - access:
          - resource: resource
            effect: effect
            action: action
          - resource: resource
            effect: effect
            action: action
          kind: kind
          namespace: namespace
        name: name
        description: description
        id: 0
        secret: secret
      properties:
        id:
          description: The ID of the robot
          format: int64
          type: integer
        name:
          description: The name of the tag
          type: string
        description:
          description: The description of the robot
          type: string
        secret:
          description: The secret of the robot
          type: string
        level:
          description: The level of the robot, project or system
          type: string
        duration:
          description: The duration of the robot in days
          format: int64
          type: integer
        editable:
          description: The editable status of the robot
          type: boolean
          x-omitempty: false
        disable:
          description: The disable status of the robot
          type: boolean
          x-omitempty: false
        expires_at:
          description: The expiration data of the robot
          format: int64
          type: integer
        permissions:
          items:
            $ref: '#/components/schemas/RobotPermission'
          type: array
        creation_time:
          description: The creation time of the robot.
          format: date-time
          type: string
        update_time:
          description: The update time of the robot.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - secret
      - level
      - duration
      - editable
      - disable
      - expires_at
      - permissions
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationTask:
      description: The replication task
      example:
        execution_id: 6
        dst_resource: dst_resource
        start_time: 2000-01-23T04:56:07.000+00:00
        src_resource: src_resource
        job_id: job_id
        resource_type: resource_type
        end_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        operation: operation
        status: status
      properties:
        id:
          description: The ID of the task
          type: integer
        execution_id:
          description: The ID of the execution that the task belongs to
          type: integer
        status:
          description: The status of the task
          type: string
        job_id:
          description: The ID of the underlying job that the task related to
          type: string
        operation:
          description: The operation of the task
          type: string
        resource_type:
          description: The type of the resource that the task operates
          type: string
        src_resource:
          description: The source resource that the task operates
          type: string
        dst_resource:
          description: The destination resource that the task operates
          type: string
        start_time:
          description: The start time of the task
          format: date-time
          type: string
        end_time:
          description: The end time of the task
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - execution_id
      - status
      - job_id
      - operation
      - resource_type
      - src_resource
      - dst_resource
      - start_time
      - end_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    StartReplicationExecution:
      example:
        policy_id: 0
      properties:
        policy_id:
          description: The ID of policy that the execution belongs to.
          format: int64
          type: integer
      type: object
      x-apifox-orders:
      - policy_id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationExecution:
      description: The replication execution
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        total: 1
        in_progress: 2
        stopped: 7
        policy_id: 6
        succeed: 5
        end_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        trigger: trigger
        status_text: status_text
        failed: 5
        status: status
      properties:
        id:
          description: The ID of the execution
          type: integer
        policy_id:
          description: The ID if the policy that the execution belongs to
          type: integer
        status:
          description: The status of the execution
          type: string
        trigger:
          description: The trigger mode
          type: string
        start_time:
          description: The start time
          format: date-time
          type: string
        end_time:
          description: The end time
          format: date-time
          type: string
        status_text:
          description: The status text
          type: string
          x-omitempty: false
        total:
          description: The total count of all executions
          type: integer
          x-omitempty: false
        failed:
          description: The count of failed executions
          type: integer
          x-omitempty: false
        succeed:
          description: The count of succeed executions
          type: integer
          x-omitempty: false
        in_progress:
          description: The count of in_progress executions
          type: integer
          x-omitempty: false
        stopped:
          description: The count of stopped executions
          type: integer
          x-omitempty: false
      type: object
      x-apifox-orders:
      - id
      - policy_id
      - status
      - trigger
      - start_time
      - end_time
      - status_text
      - total
      - failed
      - succeed
      - in_progress
      - stopped
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ResourceList:
      additionalProperties:
        format: int64
        type: integer
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FilterStyle:
      description: The style of the resource filter
      example:
        values:
        - values
        - values
        style: style
        type: type
      properties:
        type:
          description: The filter type
          type: string
        style:
          description: The filter style
          type: string
        values:
          description: The filter values
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - type
      - style
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryEndpoint:
      description: The style of the resource filter
      properties:
        key:
          description: The endpoint key
          type: string
        value:
          description: The endpoint value
          type: string
      type: object
      x-apifox-orders:
      - key
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryProviderCredentialPattern:
      description: The registry credential pattern
      properties:
        access_key_type:
          description: The access key type
          type: string
        access_key_data:
          description: The access key data
          type: string
        access_secret_type:
          description: The access secret type
          type: string
        access_secret_data:
          description: The access secret data
          type: string
      type: object
      x-apifox-orders:
      - access_key_type
      - access_key_data
      - access_secret_type
      - access_secret_data
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryProviderEndpointPattern:
      description: The registry endpoint pattern
      properties:
        endpoint_type:
          description: The endpoint type
          type: string
        endpoints:
          description: The endpoint list
          items:
            $ref: '#/components/schemas/RegistryEndpoint'
          type: array
      type: object
      x-apifox-orders:
      - endpoint_type
      - endpoints
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryProviderInfo:
      description: The registry provider info contains the base info and capability
        declarations of the registry provider
      properties:
        endpoint_pattern:
          $ref: '#/components/schemas/RegistryProviderEndpointPattern'
        credential_pattern:
          $ref: '#/components/schemas/RegistryProviderCredentialPattern'
      type: object
      x-apifox-orders:
      - endpoint_pattern
      - credential_pattern
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryInfo:
      description: The registry info contains the base info and capability declarations
        of the registry
      example:
        supported_triggers:
        - supported_triggers
        - supported_triggers
        description: description
        type: type
        supported_resource_filters:
        - values:
          - values
          - values
          style: style
          type: type
        - values:
          - values
          - values
          style: style
          type: type
      properties:
        type:
          description: The registry type
          type: string
        description:
          description: The description
          type: string
        supported_resource_filters:
          description: The filters that the registry supports
          items:
            $ref: '#/components/schemas/FilterStyle'
          type: array
        supported_triggers:
          description: The triggers that the registry supports
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - type
      - description
      - supported_resource_filters
      - supported_triggers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryPing:
      example:
        credential_type: credential_type
        access_key: access_key
        access_secret: access_secret
        insecure: true
        id: 0
        type: type
        url: url
      properties:
        id:
          description: The registry ID.
          format: int64
          nullable: true
          type: integer
        type:
          description: Type of the registry, e.g. 'harbor'.
          nullable: true
          type: string
        url:
          description: The registry URL.
          nullable: true
          type: string
        credential_type:
          description: Credential type of the registry, e.g. 'basic'.
          nullable: true
          type: string
        access_key:
          description: The registry access key.
          nullable: true
          type: string
        access_secret:
          description: The registry access secret.
          nullable: true
          type: string
        insecure:
          description: Whether or not the certificate will be verified when Harbor
            tries to access the server.
          nullable: true
          type: boolean
      type: object
      x-apifox-orders:
      - id
      - type
      - url
      - credential_type
      - access_key
      - access_secret
      - insecure
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryUpdate:
      example:
        credential_type: credential_type
        access_key: access_key
        name: name
        access_secret: access_secret
        insecure: true
        description: description
        url: url
      properties:
        name:
          description: The registry name.
          nullable: true
          type: string
        description:
          description: Description of the registry.
          nullable: true
          type: string
        url:
          description: The registry URL.
          nullable: true
          type: string
        credential_type:
          description: Credential type of the registry, e.g. 'basic'.
          nullable: true
          type: string
        access_key:
          description: The registry access key.
          nullable: true
          type: string
        access_secret:
          description: The registry access secret.
          nullable: true
          type: string
        insecure:
          description: Whether or not the certificate will be verified when Harbor
            tries to access the server.
          nullable: true
          type: boolean
      type: object
      x-apifox-orders:
      - name
      - description
      - url
      - credential_type
      - access_key
      - access_secret
      - insecure
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Registry:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        credential:
          access_key: access_key
          access_secret: access_secret
          type: type
        name: name
        insecure: true
        description: description
        id: 2
        type: type
        url: url
        status: status
      properties:
        id:
          description: The registry ID.
          format: int64
          type: integer
          x-omitempty: false
        url:
          description: The registry URL string.
          type: string
        name:
          description: The registry name.
          type: string
        credential:
          $ref: '#/components/schemas/RegistryCredential'
        type:
          description: Type of the registry, e.g. 'harbor'.
          type: string
        insecure:
          description: Whether or not the certificate will be verified when Harbor
            tries to access the server.
          type: boolean
        description:
          description: Description of the registry.
          type: string
        status:
          description: Health status of the registry.
          type: string
        creation_time:
          description: The create time of the policy.
          format: date-time
          type: string
        update_time:
          description: The update time of the policy.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - url
      - name
      - credential
      - type
      - insecure
      - description
      - status
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegistryCredential:
      example:
        access_key: access_key
        access_secret: access_secret
        type: type
      properties:
        type:
          description: Credential type, such as 'basic', 'oauth'.
          type: string
        access_key:
          description: Access key, e.g. user name when credential type is 'basic'.
          type: string
        access_secret:
          description: Access secret, e.g. password when credential type is 'basic'.
          type: string
      type: object
      x-apifox-orders:
      - type
      - access_key
      - access_secret
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationFilter:
      example:
        type: type
        value: '{}'
        decoration: decoration
      properties:
        type:
          description: The replication policy filter type.
          type: string
        value:
          description: The value of replication policy filter.
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        decoration:
          description: matches or excludes the result
          type: string
      type: object
      x-apifox-orders:
      - type
      - value
      - decoration
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationTriggerSettings:
      example:
        cron: cron
      properties:
        cron:
          description: The cron string for scheduled trigger
          type: string
      type: object
      x-apifox-orders:
      - cron
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationTrigger:
      example:
        trigger_settings:
          cron: cron
        type: type
      properties:
        type:
          description: The replication policy trigger type. The valid values are manual,
            event_based and scheduled.
          type: string
        trigger_settings:
          $ref: '#/components/schemas/ReplicationTriggerSettings'
      type: object
      x-apifox-orders:
      - type
      - trigger_settings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReplicationPolicy:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        dest_namespace_replace_count: 6
        description: description
        trigger:
          trigger_settings:
            cron: cron
          type: type
        filters:
        - type: type
          value: '{}'
          decoration: decoration
        - type: type
          value: '{}'
          decoration: decoration
        enabled: true
        speed: 1
        replicate_deletion: true
        update_time: 2000-01-23T04:56:07.000+00:00
        dest_registry:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          credential:
            access_key: access_key
            access_secret: access_secret
            type: type
          name: name
          insecure: true
          description: description
          id: 2
          type: type
          url: url
          status: status
        src_registry:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          credential:
            access_key: access_key
            access_secret: access_secret
            type: type
          name: name
          insecure: true
          description: description
          id: 2
          type: type
          url: url
          status: status
        deletion: true
        name: name
        dest_namespace: dest_namespace
        id: 0
        override: true
      properties:
        id:
          description: The policy ID.
          format: int64
          type: integer
        name:
          description: The policy name.
          type: string
        description:
          description: The description of the policy.
          type: string
        src_registry:
          $ref: '#/components/schemas/Registry'
        dest_registry:
          $ref: '#/components/schemas/Registry'
        dest_namespace:
          description: The destination namespace.
          type: string
        dest_namespace_replace_count:
          description: |-
            Specify how many path components will be replaced by the provided destination namespace.
            The default value is -1 in which case the legacy mode will be applied.
          format: int8
          type: integer
          x-isnullable: true
        trigger:
          $ref: '#/components/schemas/ReplicationTrigger'
        filters:
          description: The replication policy filter array.
          items:
            $ref: '#/components/schemas/ReplicationFilter'
          type: array
        replicate_deletion:
          description: Whether to replicate the deletion operation.
          type: boolean
        deletion:
          description: Deprecated, use "replicate_deletion" instead. Whether to replicate
            the deletion operation.
          type: boolean
        override:
          description: Whether to override the resources on the destination registry.
          type: boolean
        enabled:
          description: Whether the policy is enabled or not.
          type: boolean
        creation_time:
          description: The create time of the policy.
          format: date-time
          type: string
        update_time:
          description: The update time of the policy.
          format: date-time
          type: string
        speed:
          description: speed limit for each task
          format: int32
          type: integer
          x-isnullable: true
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - src_registry
      - dest_registry
      - dest_namespace
      - dest_namespace_replace_count
      - trigger
      - filters
      - replicate_deletion
      - deletion
      - override
      - enabled
      - creation_time
      - update_time
      - speed
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CveAllowlistItem:
      description: The item in CVE allowlist
      example:
        cve_id: cve_id
      properties:
        cve_id:
          description: The ID of the CVE, such as "CVE-2019-10164"
          type: string
      type: object
      x-apifox-orders:
      - cve_id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CveAllowlist:
      description: The CVE Allowlist for system or project
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        expires_at: 2
        project_id: 3
        id: 9
        items:
        - cve_id: cve_id
        - cve_id: cve_id
      properties:
        id:
          description: ID of the allowlist
          type: integer
        project_id:
          description: ID of the project which the allowlist belongs to.  For system
            level allowlist this attribute is zero.
          type: integer
        expires_at:
          description: the time for expiration of the allowlist, in the form of seconds
            since epoch.  This is an optional attribute, if it's not set the CVE allowlist
            does not expire.
          nullable: true
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CveAllowlistItem'
          type: array
        creation_time:
          description: The creation time of the allowlist.
          format: date-time
          type: string
        update_time:
          description: The update time of the allowlist.
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - project_id
      - expires_at
      - items
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectScanner:
      example:
        uuid: uuid
      properties:
        uuid:
          description: The identifier of the scanner registration
          type: string
      required:
      - uuid
      type: object
      x-apifox-orders:
      - uuid
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectSummaryQuota:
      example:
        hard:
          key: 9
        used:
          key: 3
      properties:
        hard:
          additionalProperties:
            format: int64
            type: integer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        used:
          additionalProperties:
            format: int64
            type: integer
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
      type: object
      x-apifox-orders:
      - hard
      - used
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectSummary:
      example:
        registry:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          credential:
            access_key: access_key
            access_secret: access_secret
            type: type
          name: name
          insecure: true
          description: description
          id: 2
          type: type
          url: url
          status: status
        quota:
          hard:
            key: 9
          used:
            key: 3
        maintainer_count: 5
        guest_count: 2
        limited_guest_count: 7
        developer_count: 5
        repo_count: 0
        project_admin_count: 1
        chart_count: 6
      properties:
        repo_count:
          description: The number of the repositories under this project.
          type: integer
          x-omitempty: false
        chart_count:
          description: The total number of charts under this project.
          type: integer
          x-omitempty: false
        project_admin_count:
          description: The total number of project admin members.
          type: integer
        maintainer_count:
          description: The total number of maintainer members.
          type: integer
        developer_count:
          description: The total number of developer members.
          type: integer
        guest_count:
          description: The total number of guest members.
          type: integer
        limited_guest_count:
          description: The total number of limited guest members.
          type: integer
        quota:
          $ref: '#/components/schemas/ProjectSummaryQuota'
        registry:
          $ref: '#/components/schemas/Registry'
      type: object
      x-apifox-orders:
      - repo_count
      - chart_count
      - project_admin_count
      - maintainer_count
      - developer_count
      - guest_count
      - limited_guest_count
      - quota
      - registry
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectMetadata:
      example:
        severity: severity
        prevent_vul: prevent_vul
        retention_id: retention_id
        reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
        public: public
        enable_content_trust_cosign: enable_content_trust_cosign
        auto_scan: auto_scan
        enable_content_trust: enable_content_trust
      properties:
        public:
          description: The public status of the project. The valid values are "true",
            "false".
          type: string
        enable_content_trust:
          description: Whether content trust is enabled or not. If it is enabled,
            user can't pull unsigned images from this project. The valid values are
            "true", "false".
          nullable: true
          type: string
        enable_content_trust_cosign:
          description: Whether cosign content trust is enabled or not. If it is enabled,
            user can't pull images without cosign signature from this project. The
            valid values are "true", "false".
          nullable: true
          type: string
        prevent_vul:
          description: Whether prevent the vulnerable images from running. The valid
            values are "true", "false".
          nullable: true
          type: string
        severity:
          description: If the vulnerability is high than severity defined here, the
            images can't be pulled. The valid values are "none", "low", "medium",
            "high", "critical".
          nullable: true
          type: string
        auto_scan:
          description: Whether scan images automatically when pushing. The valid values
            are "true", "false".
          nullable: true
          type: string
        reuse_sys_cve_allowlist:
          description: Whether this project reuse the system level CVE allowlist as
            the allowlist of its own.  The valid values are "true", "false". If it
            is set to "true" the actual allowlist associate with this project, if
            any, will be ignored.
          nullable: true
          type: string
        retention_id:
          description: The ID of the tag retention policy for the project
          nullable: true
          type: string
      type: object
      x-apifox-orders:
      - public
      - enable_content_trust
      - enable_content_trust_cosign
      - prevent_vul
      - severity
      - auto_scan
      - reuse_sys_cve_allowlist
      - retention_id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectDeletable:
      example:
        deletable: true
        message: message
      properties:
        deletable:
          description: Whether the project can be deleted.
          type: boolean
        message:
          description: The detail message when the project can not be deleted.
          type: string
      type: object
      x-apifox-orders:
      - deletable
      - message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Project:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        togglable: true
        metadata:
          severity: severity
          prevent_vul: prevent_vul
          retention_id: retention_id
          reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
          public: public
          enable_content_trust_cosign: enable_content_trust_cosign
          auto_scan: auto_scan
          enable_content_trust: enable_content_trust
        owner_name: owner_name
        owner_id: 6
        repo_count: 2
        registry_id: 1
        update_time: 2000-01-23T04:56:07.000+00:00
        current_user_role_id: 5
        deleted: true
        project_id: 0
        name: name
        current_user_role_ids:
        - 5
        - 5
        cve_allowlist:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          expires_at: 2
          project_id: 3
          id: 9
          items:
          - cve_id: cve_id
          - cve_id: cve_id
        chart_count: 7
      properties:
        project_id:
          description: Project ID
          format: int32
          type: integer
        owner_id:
          description: The owner ID of the project always means the creator of the
            project.
          format: int32
          type: integer
        name:
          description: The name of the project.
          type: string
        registry_id:
          description: The ID of referenced registry when the project is a proxy cache
            project.
          format: int64
          type: integer
        creation_time:
          description: The creation time of the project.
          format: date-time
          type: string
        update_time:
          description: The update time of the project.
          format: date-time
          type: string
        deleted:
          description: A deletion mark of the project.
          type: boolean
        owner_name:
          description: The owner name of the project.
          type: string
        togglable:
          description: Correspond to the UI about whether the project's publicity
            is  updatable (for UI)
          type: boolean
        current_user_role_id:
          description: The role ID with highest permission of the current user who
            triggered the API (for UI).  This attribute is deprecated and will be
            removed in future versions.
          type: integer
        current_user_role_ids:
          description: The list of role ID of the current user who triggered the API
            (for UI)
          items:
            format: int32
            type: integer
          type: array
        repo_count:
          description: The number of the repositories under this project.
          type: integer
          x-omitempty: false
        chart_count:
          description: The total number of charts under this project.
          type: integer
          x-omitempty: false
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        cve_allowlist:
          $ref: '#/components/schemas/CveAllowlist'
      type: object
      x-apifox-orders:
      - project_id
      - owner_id
      - name
      - registry_id
      - creation_time
      - update_time
      - deleted
      - owner_name
      - togglable
      - current_user_role_id
      - current_user_role_ids
      - repo_count
      - chart_count
      - metadata
      - cve_allowlist
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProjectReq:
      example:
        metadata:
          severity: severity
          prevent_vul: prevent_vul
          retention_id: retention_id
          reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
          public: public
          enable_content_trust_cosign: enable_content_trust_cosign
          auto_scan: auto_scan
          enable_content_trust: enable_content_trust
        storage_limit: 0
        public: true
        cve_allowlist:
          creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          expires_at: 2
          project_id: 3
          id: 9
          items:
          - cve_id: cve_id
          - cve_id: cve_id
        project_name: project_name
        registry_id: 6
      properties:
        project_name:
          description: The name of the project.
          maxLength: 255
          type: string
        public:
          description: deprecated, reserved for project creation in replication
          nullable: true
          type: boolean
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        cve_allowlist:
          $ref: '#/components/schemas/CveAllowlist'
        storage_limit:
          description: The storage quota of the project.
          format: int64
          nullable: true
          type: integer
        registry_id:
          description: The ID of referenced registry when creating the proxy cache
            project
          format: int64
          nullable: true
          type: integer
      type: object
      x-apifox-orders:
      - project_name
      - public
      - metadata
      - cve_allowlist
      - storage_limit
      - registry_id
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Icon:
      example:
        content-type: content-type
        content: content
      properties:
        content-type:
          description: The content type of the icon
          type: string
        content:
          description: The base64 encoded content of the icon
          type: string
      type: object
      x-apifox-orders:
      - content-type
      - content
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProviderUnderProject:
      example:
        default: true
        provider: provider
        id: 0
        enabled: true
      properties:
        id:
          type: integer
        provider:
          type: string
        enabled:
          type: boolean
        default:
          type: boolean
      type: object
      x-apifox-orders:
      - id
      - provider
      - enabled
      - default
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Task:
      example:
        status_message: status_message
        creation_time: creation_time
        execution_id: 6
        start_time: start_time
        update_time: update_time
        extra_attrs:
          key: '{}'
        end_time: end_time
        id: 0
        status: status
        run_count: 1
      properties:
        id:
          description: The ID of task
          type: integer
        execution_id:
          description: The ID of task execution
          type: integer
        status:
          description: The status of task
          type: string
        status_message:
          description: The status message of task
          type: string
        run_count:
          description: The count of task run
          format: int32
          type: integer
        extra_attrs:
          additionalProperties:
            type: object
            x-apifox-orders: []
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        creation_time:
          description: The creation time of task
          type: string
        update_time:
          description: The update time of task
          type: string
        start_time:
          description: The start time of task
          type: string
        end_time:
          description: The end time of task
          type: string
      type: object
      x-apifox-orders:
      - id
      - execution_id
      - status
      - status_message
      - run_count
      - extra_attrs
      - creation_time
      - update_time
      - start_time
      - end_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Execution:
      example:
        status_message: status_message
        start_time: start_time
        extra_attrs:
          key: '{}'
        vendor_id: 6
        end_time: end_time
        id: 0
        metrics:
          running_task_count: 7
          success_task_count: 5
          stopped_task_count: 3
          scheduled_task_count: 9
          error_task_count: 5
          pending_task_count: 2
          task_count: 1
        trigger: trigger
        vendor_type: vendor_type
        status: status
      properties:
        id:
          description: The ID of execution
          type: integer
        vendor_type:
          description: The vendor type of execution
          type: string
        vendor_id:
          description: The vendor id of execution
          type: integer
        status:
          description: The status of execution
          type: string
        status_message:
          description: The status message of execution
          type: string
        metrics:
          $ref: '#/components/schemas/Metrics'
        trigger:
          description: The trigger of execution
          type: string
        extra_attrs:
          additionalProperties:
            type: object
            x-apifox-orders: []
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        start_time:
          description: The start time of execution
          type: string
        end_time:
          description: The end time of execution
          type: string
      type: object
      x-apifox-orders:
      - id
      - vendor_type
      - vendor_id
      - status
      - status_message
      - metrics
      - trigger
      - extra_attrs
      - start_time
      - end_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Metrics:
      example:
        running_task_count: 7
        success_task_count: 5
        stopped_task_count: 3
        scheduled_task_count: 9
        error_task_count: 5
        pending_task_count: 2
        task_count: 1
      properties:
        task_count:
          description: The count of task
          type: integer
        success_task_count:
          description: The count of success task
          type: integer
        error_task_count:
          description: The count of error task
          type: integer
        pending_task_count:
          description: The count of pending task
          type: integer
        running_task_count:
          description: The count of running task
          type: integer
        scheduled_task_count:
          description: The count of scheduled task
          type: integer
        stopped_task_count:
          description: The count of stopped task
          type: integer
      type: object
      x-apifox-orders:
      - task_count
      - success_task_count
      - error_task_count
      - pending_task_count
      - running_task_count
      - scheduled_task_count
      - stopped_task_count
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PreheatPolicy:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        project_id: 6
        name: name
        description: description
        provider_id: 1
        id: 0
        filters: filters
        trigger: trigger
        provider_name: provider_name
        enabled: true
      properties:
        id:
          description: The ID of preheat policy
          type: integer
        name:
          description: The Name of preheat policy
          type: string
        description:
          description: The Description of preheat policy
          type: string
        project_id:
          description: The ID of preheat policy project
          type: integer
        provider_id:
          description: The ID of preheat policy provider
          type: integer
        provider_name:
          description: The Name of preheat policy provider
          type: string
        filters:
          description: The Filters of preheat policy
          type: string
        trigger:
          description: The Trigger of preheat policy
          type: string
        enabled:
          description: Whether the preheat policy enabled
          type: boolean
          x-omitempty: false
        creation_time:
          description: The Create Time of preheat policy
          format: date-time
          type: string
        update_time:
          description: The Update Time of preheat policy
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - project_id
      - provider_id
      - provider_name
      - filters
      - trigger
      - enabled
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Instance:
      example:
        endpoint: endpoint
        default: true
        vendor: vendor
        name: name
        insecure: true
        description: description
        auth_mode: auth_mode
        id: 0
        auth_info:
          key: auth_info
        setup_timestamp: 6
        enabled: true
        status: status
      properties:
        id:
          description: Unique ID
          type: integer
        name:
          description: Instance name
          type: string
        description:
          description: Description of instance
          type: string
        vendor:
          description: Based on which driver, identified by ID
          type: string
        endpoint:
          description: The service endpoint of this instance
          type: string
        auth_mode:
          description: The authentication way supported
          type: string
        auth_info:
          additionalProperties:
            type: string
          description: The auth credential data if exists
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        status:
          description: The health status
          type: string
        enabled:
          description: Whether the instance is activated or not
          type: boolean
          x-omitempty: false
        default:
          description: Whether the instance is default or not
          type: boolean
          x-omitempty: false
        insecure:
          description: Whether the instance endpoint is insecure or not
          type: boolean
          x-omitempty: false
        setup_timestamp:
          description: The timestamp of instance setting up
          format: int64
          type: integer
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - vendor
      - endpoint
      - auth_mode
      - auth_info
      - status
      - enabled
      - default
      - insecure
      - setup_timestamp
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Metadata:
      example:
        maintainers:
        - maintainers
        - maintainers
        name: name
        icon: icon
        id: id
        source: source
        version: version
      properties:
        id:
          description: id
          type: string
        name:
          description: name
          type: string
        icon:
          description: icon
          type: string
        maintainers:
          description: maintainers
          items:
            type: string
          type: array
        version:
          description: version
          type: string
        source:
          description: source
          type: string
      type: object
      x-apifox-orders:
      - id
      - name
      - icon
      - maintainers
      - version
      - source
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AuditLog:
      example:
        resource: resource
        resource_type: resource_type
        op_time: 2006-01-02T15:04:05Z
        id: 0
        operation: operation
        username: username
      properties:
        id:
          description: The ID of the audit log entry.
          type: integer
        username:
          description: Username of the user in this log entry.
          type: string
        resource:
          description: Name of the repository in this log entry.
          type: string
        resource_type:
          description: Tag of the repository in this log entry.
          type: string
        operation:
          description: The operation against the repository in this log entry.
          type: string
        op_time:
          description: The time when this operation is triggered.
          example: 2006-01-02T15:04:05Z
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - username
      - resource
      - resource_type
      - operation
      - op_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    VulnerabilitySummary:
      description: |
        VulnerabilitySummary contains the total number of the foun d vulnerabilities number and numbers of each severity level.
      example:
        summary:
          Critical: 5
          High: 5
        total: 500
        fixable: 100
      properties:
        total:
          description: The total number of the found vulnerabilities
          example: 500
          format: int
          type: integer
          x-omitempty: false
        fixable:
          description: The number of the fixable vulnerabilities
          example: 100
          format: int
          type: integer
          x-omitempty: false
        summary:
          additionalProperties:
            example: 10
            format: int
            type: integer
          description: Numbers of the vulnerabilities with different severity
          example:
            Critical: 5
            High: 5
          properties: {}
          type: object
          x-omitempty: false
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - total
      - fixable
      - summary
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NativeReportSummary:
      description: The summary for the native report
      example:
        severity: High
        duration: 300
        summary:
          summary:
            Critical: 5
            High: 5
          total: 500
          fixable: 100
        start_time: 2006-01-02T14:04:05Z
        scan_status: Success
        report_id: 5f62c830-f996-11e9-957f-0242c0a89008
        complete_percent: 100
        end_time: 2006-01-02T15:04:05Z
        scanner:
          vendor: Aqua Security
          name: Trivy
          version: v0.9.1
      properties:
        report_id:
          description: id of the native scan report
          example: 5f62c830-f996-11e9-957f-0242c0a89008
          type: string
        scan_status:
          description: The status of the report generating process
          example: Success
          type: string
        severity:
          description: The overall severity
          example: High
          type: string
        duration:
          description: The seconds spent for generating the report
          example: 300
          format: int64
          type: integer
        summary:
          $ref: '#/components/schemas/VulnerabilitySummary'
        start_time:
          description: The start time of the scan process that generating report
          example: 2006-01-02T14:04:05Z
          format: date-time
          type: string
        end_time:
          description: The end time of the scan process that generating report
          example: 2006-01-02T15:04:05Z
          format: date-time
          type: string
        complete_percent:
          description: The complete percent of the scanning which value is between
            0 and 100
          example: 100
          type: integer
        scanner:
          $ref: '#/components/schemas/Scanner'
      type: object
      x-apifox-orders:
      - report_id
      - scan_status
      - severity
      - duration
      - summary
      - start_time
      - end_time
      - complete_percent
      - scanner
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScanOverview:
      additionalProperties:
        $ref: '#/components/schemas/NativeReportSummary'
      description: The scan overview attached in the metadata of tag
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Scanner:
      example:
        vendor: Aqua Security
        name: Trivy
        version: v0.9.1
      properties:
        name:
          description: Name of the scanner
          example: Trivy
          type: string
        vendor:
          description: Name of the scanner provider
          example: Aqua Security
          type: string
        version:
          description: Version of the scanner adapter
          example: v0.9.1
          type: string
      type: object
      x-apifox-orders:
      - name
      - vendor
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Label:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        color: color
        project_id: 6
        scope: scope
        name: name
        description: description
        id: 1
      properties:
        id:
          description: The ID of the label
          format: int64
          type: integer
        name:
          description: The name the label
          type: string
        description:
          description: The description the label
          type: string
        color:
          description: The color the label
          type: string
        scope:
          description: The scope the label
          type: string
        project_id:
          description: The ID of project that the label belongs to
          format: int64
          type: integer
        creation_time:
          description: The creation time the label
          format: date-time
          type: string
        update_time:
          description: The update time of the label
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - name
      - description
      - color
      - scope
      - project_id
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Platform:
      example:
        '''os.version''': '''os.version'''
        os: os
        variant: variant
        '''os.features''':
        - '''os.features'''
        - '''os.features'''
        architecture: architecture
      properties:
        architecture:
          description: The architecture that the artifact applys to
          type: string
        os:
          description: The OS that the artifact applys to
          type: string
        '''os.version''':
          description: The version of the OS that the artifact applys to
          type: string
        '''os.features''':
          description: The features of the OS that the artifact applys to
          items:
            type: string
          type: array
        variant:
          description: The variant of the CPU
          type: string
      type: object
      x-apifox-orders:
      - architecture
      - os
      - '''os.version'''
      - '''os.features'''
      - variant
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Reference:
      example:
        urls:
        - urls
        - urls
        child_id: 2
        parent_id: 5
        annotations:
          key: annotations
        child_digest: child_digest
        platform:
          '''os.version''': '''os.version'''
          os: os
          variant: variant
          '''os.features''':
          - '''os.features'''
          - '''os.features'''
          architecture: architecture
      properties:
        parent_id:
          description: The parent ID of the reference
          format: int64
          type: integer
        child_id:
          description: The child ID of the reference
          format: int64
          type: integer
        child_digest:
          description: The digest of the child artifact
          type: string
        platform:
          $ref: '#/components/schemas/Platform'
        annotations:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        urls:
          description: The download URLs
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - parent_id
      - child_id
      - child_digest
      - platform
      - annotations
      - urls
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdditionLink:
      example:
        absolute: true
        href: href
      properties:
        href:
          description: The link of the addition
          type: string
        absolute:
          description: Determine whether the link is an absolute URL or not
          type: boolean
          x-omitempty: false
      type: object
      x-apifox-orders:
      - href
      - absolute
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdditionLinks:
      additionalProperties:
        $ref: '#/components/schemas/AdditionLink'
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Annotations:
      additionalProperties:
        type: string
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExtraAttrs:
      additionalProperties:
        type: object
        x-apifox-orders: []
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Repository:
      example:
        creation_time: 2000-01-23T04:56:07.000+00:00
        update_time: 2000-01-23T04:56:07.000+00:00
        project_id: 6
        name: name
        artifact_count: 1
        description: description
        id: 0
        pull_count: 5
      properties:
        id:
          description: The ID of the repository
          format: int64
          type: integer
        project_id:
          description: The ID of the project that the repository belongs to
          format: int64
          type: integer
        name:
          description: The name of the repository
          type: string
        description:
          description: The description of the repository
          type: string
        artifact_count:
          description: The count of the artifacts inside the repository
          format: int64
          type: integer
          x-omitempty: false
        pull_count:
          description: The count that the artifact inside the repository pulled
          format: int64
          type: integer
          x-omitempty: false
        creation_time:
          description: The creation time of the repository
          format: date-time
          type: string
        update_time:
          description: The update time of the repository
          format: date-time
          type: string
      type: object
      x-apifox-orders:
      - id
      - project_id
      - name
      - description
      - artifact_count
      - pull_count
      - creation_time
      - update_time
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Artifact:
      example:
        references:
        - urls:
          - urls
          - urls
          child_id: 2
          parent_id: 5
          annotations:
            key: annotations
          child_digest: child_digest
          platform:
            '''os.version''': '''os.version'''
            os: os
            variant: variant
            '''os.features''':
            - '''os.features'''
            - '''os.features'''
            architecture: architecture
        - urls:
          - urls
          - urls
          child_id: 2
          parent_id: 5
          annotations:
            key: annotations
          child_digest: child_digest
          platform:
            '''os.version''': '''os.version'''
            os: os
            variant: variant
            '''os.features''':
            - '''os.features'''
            - '''os.features'''
            architecture: architecture
        addition_links:
          key:
            absolute: true
            href: href
        extra_attrs:
          key: '{}'
        accessories:
        - creation_time: 2000-01-23T04:56:07.000+00:00
          size: 4
          digest: digest
          icon: icon
          id: 9
          artifact_id: 3
          subject_artifact_id: 2
          type: type
        - creation_time: 2000-01-23T04:56:07.000+00:00
          size: 4
          digest: digest
          icon: icon
          id: 9
          artifact_id: 3
          subject_artifact_id: 2
          type: type
        icon: icon
        annotations:
          key: annotations
        type: type
        manifest_media_type: manifest_media_type
        tags:
        - name: name
          id: 1
        - name: name
          id: 1
        labels:
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 1
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 1
        pull_time: 2000-01-23T04:56:07.000+00:00
        size: 5
        media_type: media_type
        project_id: 6
        digest: digest
        scan_overview:
          key:
            severity: High
            duration: 300
            summary:
              summary:
                Critical: 5
                High: 5
              total: 500
              fixable: 100
            start_time: 2006-01-02T14:04:05Z
            scan_status: Success
            report_id: 5f62c830-f996-11e9-957f-0242c0a89008
            complete_percent: 100
            end_time: 2006-01-02T15:04:05Z
            scanner:
              vendor: Aqua Security
              name: Trivy
              version: v0.9.1
        repository_id: 1
        id: 0
        push_time: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The ID of the artifact
          format: int64
          type: integer
        type:
          description: The type of the artifact, e.g. image, chart, etc
          type: string
        media_type:
          description: The media type of the artifact
          type: string
        manifest_media_type:
          description: The manifest media type of the artifact
          type: string
        project_id:
          description: The ID of the project that the artifact belongs to
          format: int64
          type: integer
        repository_id:
          description: The ID of the repository that the artifact belongs to
          format: int64
          type: integer
        digest:
          description: The digest of the artifact
          type: string
        size:
          description: The size of the artifact
          format: int64
          type: integer
        icon:
          description: The digest of the icon
          type: string
        push_time:
          description: The push time of the artifact
          format: date-time
          type: string
        pull_time:
          description: The latest pull time of the artifact
          format: date-time
          type: string
        extra_attrs:
          additionalProperties:
            type: object
            x-apifox-orders: []
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        annotations:
          additionalProperties:
            type: string
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        references:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        addition_links:
          additionalProperties:
            $ref: '#/components/schemas/AdditionLink'
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
        scan_overview:
          additionalProperties:
            $ref: '#/components/schemas/NativeReportSummary'
          description: The scan overview attached in the metadata of tag
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
          x-apifox-folder: Schemas
        accessories:
          items:
            $ref: '#/components/schemas/Accessory'
          type: array
      type: object
      x-apifox-orders:
      - id
      - type
      - media_type
      - manifest_media_type
      - project_id
      - repository_id
      - digest
      - size
      - icon
      - push_time
      - pull_time
      - extra_attrs
      - annotations
      - references
      - tags
      - addition_links
      - labels
      - scan_overview
      - accessories
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartMetadata:
      description: The metadata of chart version
      properties:
        name:
          description: The name of the chart
          type: string
        home:
          description: The URL to the relevant project page
          type: string
        sources:
          description: The URL to the source code of chart
          items:
            type: string
          type: array
        version:
          description: A SemVer 2 version of chart
          type: string
        description:
          description: A one-sentence description of chart
          type: string
        keywords:
          description: A list of string keywords
          items:
            type: string
          type: array
        engine:
          description: The name of template engine
          type: string
        icon:
          description: The URL to an icon file
          type: string
        apiVersion:
          description: The API version of this chart
          type: string
        appVersion:
          description: The version of the application enclosed in the chart
          type: string
        deprecated:
          description: Whether or not this chart is deprecated
          type: boolean
      required:
      - apiVersion
      - appVersion
      - engine
      - icon
      - name
      - version
      type: object
      x-apifox-orders:
      - name
      - home
      - sources
      - version
      - description
      - keywords
      - engine
      - icon
      - apiVersion
      - appVersion
      - deprecated
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ChartVersion:
      allOf:
      - $ref: '#/components/schemas/ChartMetadata'
      - $ref: '#/components/schemas/ChartVersion_allOf'
      description: A specified chart entry
      example:
        labels:
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 1
        - creation_time: 2000-01-23T04:56:07.000+00:00
          update_time: 2000-01-23T04:56:07.000+00:00
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 1
      properties:
        labels:
          description: A list of label
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
      x-apifox-orders:
      - labels
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SearchRepository:
      example:
        project_id: 4
        artifact_count: 1
        project_name: project_name
        repository_name: repository_name
        pull_count: 7
        project_public: true
      properties:
        project_id:
          description: The ID of the project that the repository belongs to
          type: integer
        project_name:
          description: The name of the project that the repository belongs to
          type: string
        project_public:
          description: The flag to indicate the publicity of the project that the
            repository belongs to (1 is public, 0 is not)
          type: boolean
        repository_name:
          description: The name of the repository
          type: string
        pull_count:
          description: The count how many times the repository is pulled
          type: integer
        artifact_count:
          description: The count of artifacts in the repository
          type: integer
      type: object
      x-apifox-orders:
      - project_id
      - project_name
      - project_public
      - repository_name
      - pull_count
      - artifact_count
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SearchResult:
      description: The chart search result item
      example:
        Score: 1
        Chart:
          labels:
          - creation_time: 2000-01-23T04:56:07.000+00:00
            update_time: 2000-01-23T04:56:07.000+00:00
            color: color
            project_id: 6
            scope: scope
            name: name
            description: description
            id: 1
          - creation_time: 2000-01-23T04:56:07.000+00:00
            update_time: 2000-01-23T04:56:07.000+00:00
            color: color
            project_id: 6
            scope: scope
            name: name
            description: description
            id: 1
        Name: Name
      properties:
        Name:
          description: The chart name with repo name
          type: string
        Score:
          description: The matched level
          type: integer
        Chart:
          $ref: '#/components/schemas/ChartVersion'
      type: object
      x-apifox-orders:
      - Name
      - Score
      - Chart
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Search:
      example:
        project:
        - creation_time: 2000-01-23T04:56:07.000+00:00
          togglable: true
          metadata:
            severity: severity
            prevent_vul: prevent_vul
            retention_id: retention_id
            reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
            public: public
            enable_content_trust_cosign: enable_content_trust_cosign
            auto_scan: auto_scan
            enable_content_trust: enable_content_trust
          owner_name: owner_name
          owner_id: 6
          repo_count: 2
          registry_id: 1
          update_time: 2000-01-23T04:56:07.000+00:00
          current_user_role_id: 5
          deleted: true
          project_id: 0
          name: name
          current_user_role_ids:
          - 5
          - 5
          cve_allowlist:
            creation_time: 2000-01-23T04:56:07.000+00:00
            update_time: 2000-01-23T04:56:07.000+00:00
            expires_at: 2
            project_id: 3
            id: 9
            items:
            - cve_id: cve_id
            - cve_id: cve_id
          chart_count: 7
        - creation_time: 2000-01-23T04:56:07.000+00:00
          togglable: true
          metadata:
            severity: severity
            prevent_vul: prevent_vul
            retention_id: retention_id
            reuse_sys_cve_allowlist: reuse_sys_cve_allowlist
            public: public
            enable_content_trust_cosign: enable_content_trust_cosign
            auto_scan: auto_scan
            enable_content_trust: enable_content_trust
          owner_name: owner_name
          owner_id: 6
          repo_count: 2
          registry_id: 1
          update_time: 2000-01-23T04:56:07.000+00:00
          current_user_role_id: 5
          deleted: true
          project_id: 0
          name: name
          current_user_role_ids:
          - 5
          - 5
          cve_allowlist:
            creation_time: 2000-01-23T04:56:07.000+00:00
            update_time: 2000-01-23T04:56:07.000+00:00
            expires_at: 2
            project_id: 3
            id: 9
            items:
            - cve_id: cve_id
            - cve_id: cve_id
          chart_count: 7
        repository:
        - project_id: 4
          artifact_count: 1
          project_name: project_name
          repository_name: repository_name
          pull_count: 7
          project_public: true
        - project_id: 4
          artifact_count: 1
          project_name: project_name
          repository_name: repository_name
          pull_count: 7
          project_public: true
        chart:
        - Score: 1
          Chart:
            labels:
            - creation_time: 2000-01-23T04:56:07.000+00:00
              update_time: 2000-01-23T04:56:07.000+00:00
              color: color
              project_id: 6
              scope: scope
              name: name
              description: description
              id: 1
            - creation_time: 2000-01-23T04:56:07.000+00:00
              update_time: 2000-01-23T04:56:07.000+00:00
              color: color
              project_id: 6
              scope: scope
              name: name
              description: description
              id: 1
          Name: Name
        - Score: 1
          Chart:
            labels:
            - creation_time: 2000-01-23T04:56:07.000+00:00
              update_time: 2000-01-23T04:56:07.000+00:00
              color: color
              project_id: 6
              scope: scope
              name: name
              description: description
              id: 1
            - creation_time: 2000-01-23T04:56:07.000+00:00
              update_time: 2000-01-23T04:56:07.000+00:00
              color: color
              project_id: 6
              scope: scope
              name: name
              description: description
              id: 1
          Name: Name
      properties:
        project:
          description: Search results of the projects that matched the filter keywords.
          items:
            $ref: '#/components/schemas/Project'
          type: array
        repository:
          description: Search results of the repositories that matched the filter
            keywords.
          items:
            $ref: '#/components/schemas/SearchRepository'
          type: array
        chart:
          description: Search results of the charts that macthed the filter keywords.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
          x-omitempty: true
          x-isnullable: true
      type: object
      x-apifox-orders:
      - project
      - repository
      - chart
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Errors:
      description: The error array that describe the errors got during the handling
        of request
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Error:
      description: a model for all the error response coming from harbor
      properties:
        code:
          description: The error code
          type: string
        message:
          description: The error message
          type: string
      type: object
      x-apifox-orders:
      - code
      - message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Tag:
      example:
        name: name
        id: 1
      properties:
        id:
          description: 标签ID编号
          format: int64
          minimum: 1
          type: integer
        name:
          description: 标签名称
          type: string
      type: object
      xml:
        name: Tag
      x-apifox-orders:
      - id
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: ""
    Pet:
      properties:
        id:
          description: 宠物ID编号
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        category:
          $ref: '#/components/schemas/Category'
        name:
          description: 名称
          example: doggie
          type: string
        photoUrls:
          description: 照片URL
          items:
            type: string
          type: array
        tags:
          description: 标签
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        status:
          description: 宠物销售状态
          enum:
          - available
          - pending
          - sold
          type: string
      required:
      - category
      - id
      - name
      - photoUrls
      - status
      - tags
      type: object
      x-apifox-orders:
      - id
      - category
      - name
      - photoUrls
      - tags
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: ""
    Category:
      properties:
        id:
          description: 分组ID编号
          format: int64
          minimum: 1
          type: integer
        name:
          description: 分组名称
          type: string
      type: object
      xml:
        name: Category
      x-apifox-orders:
      - id
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: ""
    inline_object:
      properties:
        url:
          description: The URL of OIDC endpoint to be tested.
          type: string
        verify_cert:
          description: Whether the certificate should be verified
          type: boolean
      type: object
      x-apifox-orders:
      - url
      - verify_cert
      x-apifox-ignore-properties: []
    inline_object_1:
      properties:
        dry_run:
          type: boolean
      type: object
      x-apifox-orders:
      - dry_run
      x-apifox-ignore-properties: []
    inline_object_2:
      properties:
        action:
          type: string
      type: object
      x-apifox-orders:
      - action
      x-apifox-ignore-properties: []
    ConfigurationsResponse_scan_all_policy_parameter:
      description: The parameters of the policy, the values are dependent on the type
        of the policy.
      example:
        daily_time: 6
      properties:
        daily_time:
          description: The offset in seconds of UTC 0 o'clock, only valid when the
            policy type is "daily"
          type: integer
    ConfigurationsResponse_scan_all_policy:
      example:
        parameter:
          daily_time: 6
        type: type
      properties:
        type:
          description: The type of scan all policy, currently the valid values are
            "none" and "daily"
          type: string
        parameter:
          $ref: '#/components/schemas/ConfigurationsResponse_scan_all_policy_parameter'
    ChartVersion_allOf:
      properties:
        created:
          description: The created time of the chart entry
          type: string
        removed:
          description: A flag to indicate if the chart entry is removed
          type: boolean
        digest:
          description: The digest value of the chart entry
          type: string
        urls:
          description: The urls of the chart entry
          items:
            type: string
          type: array
